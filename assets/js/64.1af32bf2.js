(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{227:function(e,t,o){"use strict";o.r(t);var i=o(0),r=Object(i.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"版本控制-version-control"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#版本控制-version-control","aria-hidden":"true"}},[e._v("#")]),e._v(" 版本控制(Version Control)")]),e._v(" "),o("p",[e._v("Visual Studio Code has integrated "),o("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git"),o("OutboundLink")],1),e._v(" support for the most common commands. This makes it an excellent choice to manage your code commits while you develop.")]),e._v(" "),o("p",[e._v("VS Code 已经集成了 "),o("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git"),o("OutboundLink")],1),e._v(" 并支持 "),o("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git"),o("OutboundLink")],1),e._v(" 的大部分常用命令，这使得它是你在开发过程中，管理你的代码并提交的良好选择。")]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Note:")]),e._v(" VS Code will leverage your machine's Git installation, so you need to "),o("a",{attrs:{href:"http://git-scm.com/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("install Git"),o("OutboundLink")],1),e._v(" first before you get these features. Make sure you install at least version "),o("code",[e._v("2.0.0")]),e._v(".")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("注意：")]),e._v(" VS Code 依赖您的机器上的 Git，因此你需要先"),o("a",{attrs:{href:"http://git-scm.com/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 Git"),o("OutboundLink")],1),e._v("，然后才能获得这些功能。确保你安装了 Git 2.0.0以上的版本。")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Tip:")]),e._v(" VS Code will work with any Git repository.  If you don't already have a private hosted Git provider, "),o("a",{attrs:{href:"https://www.visualstudio.com/products/visual-studio-team-services-vs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Visual Studio Team Services"),o("OutboundLink")],1),e._v(" is a great free option. "),o("a",{attrs:{href:"https://go.microsoft.com/fwlink/?LinkID=307137&campaign=o~msft~code~vc",target:"_blank",rel:"noopener noreferrer"}},[e._v("Click here to sign-up"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("提示：")]),e._v(" VS Code 可适用于任何 Git 仓库。如果您还没有私人托管的 Git 仓库，"),o("a",{attrs:{href:"https://www.visualstudio.com/products/visual-studio-team-services-vs",target:"_blank",rel:"noopener noreferrer"}},[e._v("Visual Studio Team Services"),o("OutboundLink")],1),e._v("是一个免费、不错的选择。"),o("a",{attrs:{href:"https://go.microsoft.com/fwlink/?LinkID=307137&campaign=o~msft~code~vc",target:"_blank",rel:"noopener noreferrer"}},[e._v("点击这里注册"),o("OutboundLink")],1),e._v("。")])]),e._v(" "),o("h2",{attrs:{id:"概述-overview"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#概述-overview","aria-hidden":"true"}},[e._v("#")]),e._v(" 概述(Overview)")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/overview.png",alt:"git overview"}})]),e._v(" "),o("p",[e._v("The Git icon on the left will always indicate an "),o("strong",[e._v("overview of how many changes")]),e._v(" you currently have in your repository. Clicking it will show you the details of your current repository changes: "),o("strong",[e._v("unstaged")]),e._v(", "),o("strong",[e._v("staged")]),e._v(" and "),o("strong",[e._v("unresolved conflicting merge")]),e._v(" changes.")]),e._v(" "),o("p",[e._v("左侧的 Git 图标将"),o("strong",[e._v("始终指示您当前在仓库中有多少的更改")]),e._v("。单击它将显示当前仓库更改的详细信息："),o("strong",[e._v("未暂存")]),e._v("，"),o("strong",[e._v("暂存")]),e._v("和"),o("strong",[e._v("未解决的冲突合并更改")]),e._v("。")]),e._v(" "),o("p",[e._v("Clicking each item will show you in detail "),o("strong",[e._v("the textual changes within each file")]),e._v(". Note that for unstaged changes, the editor on the right still lets you edit the file: feel free to use it!")]),e._v(" "),o("p",[e._v("单击每个文件将详细显示"),o("strong",[e._v("每个文件中的文本更改")]),e._v("。注意，对于未暂存的更改，右侧的编辑器仍然允许您编辑文件：使用时放轻松！")]),e._v(" "),o("p",[e._v("You can also find indicators of the "),o("strong",[e._v("status of your repository")]),e._v(" in the bottom left corner of VS Code: the "),o("strong",[e._v("current branch")]),e._v(", "),o("strong",[e._v("dirty indicators")]),e._v(" and the number of "),o("strong",[e._v("incoming and outgoing commits")]),e._v(" of the current branch. You can "),o("strong",[e._v("checkout")]),e._v(" any branch in your repository by clicking that status indicator and selecting the Git reference from the list.")]),e._v(" "),o("p",[e._v("您还可以在 VS Code 的左下角找到"),o("strong",[e._v("仓库的状态栏")]),e._v("："),o("strong",[e._v("当前分支")]),e._v("，"),o("strong",[e._v("dirty indicators")]),e._v("以及"),o("strong",[e._v("当前分支的Git Pull和Git Push提交数")]),e._v("。您可以通过"),o("strong",[e._v("单击该状态栏")]),e._v("并从列表中选择 Git 引用来切换到仓库中的任何分支。")]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Tip:")]),e._v(" You can open VS Code in a sub-directory of a Git repository. VS Code's Git services will still work as usual, showing all changes within the repository, but file changes outside of the scoped directory are shaded with a tool tip indicating they are located outside the current workspace.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("提示：")]),e._v(" 您可以在 Git 仓库的子目录中打开 VS Code。 VS Code 的 Git 服务仍将照常工作，显示仓库中的所有更改，但在范围目录以外的文件更改用一个工具提示，来表示它们位于当前工作区之外。")])]),e._v(" "),o("h2",{attrs:{id:"git-状态栏操作-git-status-bar-actions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git-状态栏操作-git-status-bar-actions","aria-hidden":"true"}},[e._v("#")]),e._v(" Git 状态栏操作(Git Status Bar Actions)")]),e._v(" "),o("p",[e._v("There is a "),o("strong",[e._v("Synchronize")]),e._v(" action in the Status Bar, next to the branch indicator, when the current checked out branch has an upstream branch configured.")]),e._v(" "),o("p",[e._v("如果当前切换到的分支配置了上游分支时，在 Git 状态栏中，在分支指示符旁边有一个"),o("strong",[e._v("同步操作")]),e._v("。")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/git-status-bar-sync.png",alt:"git status bar sync"}})]),e._v(" "),o("p",[e._v("If there is no upstream branch configured and the Git repository has remotes set up, the "),o("strong",[e._v("Publish")]),e._v(" action is enabled. This will let you publish the current branch to a remote.")]),e._v(" "),o("p",[e._v("如果没有配置上游分支并且 Git 仓库已配置远程仓库，那么将启用 PUSH 操作。这将允许您将当前分支 PUSH 到远程。")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/git-status-bar-publish.png",alt:"git status bar publish"}})]),e._v(" "),o("h2",{attrs:{id:"提交-commit"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#提交-commit","aria-hidden":"true"}},[e._v("#")]),e._v(" 提交(Commit)")]),e._v(" "),o("p",[o("strong",[e._v("Staging")]),e._v(" and "),o("strong",[e._v("unstaging")]),e._v(" can be done via contextual actions in the files or by drag-and-drop.")]),e._v(" "),o("p",[o("strong",[e._v("分段")]),e._v("和"),o("strong",[e._v("拆分")]),e._v("可以通过文件中的上下文操作或通过拖放来完成。")]),e._v(" "),o("p",[e._v("You can type a commit message above the changes and press "),o("code",[e._v("kbstyle(Ctrl+Enter)")]),e._v(" (Mac: "),o("code",[e._v("kbstyle(⌘+Enter)")]),e._v(") to commit them. If there are any staged changes, only those will be committed, otherwise all changes will be committed.")]),e._v(" "),o("p",[e._v("您可以在更改上方输入Commit Message，然后按"),o("code",[e._v("kbstyle（Ctrl + Enter）")]),e._v(" "),o("code",[e._v("（Mac：kbstyle（⌘+ Enter））")]),e._v("提交它们。如果有任何分阶段的更改，只有那些添加提交的将被提交，否则所有更改都将提交。")]),e._v(" "),o("p",[e._v("We've found this to be a great workflow. For example, in the previous screenshot, only the "),o("code",[e._v("config.js")]),e._v(" file will be included in the commit. A consecutive commit action would commit both "),o("code",[e._v("vinyl-zip.js")]),e._v(" and "),o("code",[e._v("tests.js")]),e._v(" in a separate commit.")]),e._v(" "),o("p",[e._v("我们发现这是一个伟大的工作流。例如，在上一个屏幕截图中，只有 config.js 文件被包含在 commit 中。连续的提交操作将提交 vinyl-zip.js 和 tests.js。")]),e._v(" "),o("p",[e._v("More specific "),o("strong",[e._v("commit actions")]),e._v(" can be found in the "),o("code",[e._v("...")]),e._v(" menu on the top of the Git view.")]),e._v(" "),o("p",[e._v("更具体的 "),o("strong",[e._v("commit操作")]),e._v(" 可以在 Git 视图顶部的"),o("code",[e._v("...")]),e._v("菜单中找到。")]),e._v(" "),o("h2",{attrs:{id:"分支和标签-branches-and-tags"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#分支和标签-branches-and-tags","aria-hidden":"true"}},[e._v("#")]),e._v(" 分支和标签(Branches and Tags)")]),e._v(" "),o("p",[e._v("You can create and checkout branches directly within VS code through "),o("strong",[e._v("Quick Open")]),e._v(". Press "),o("code",[e._v("kb(workbench.action.quickOpen)")]),e._v(", type "),o("code",[e._v("git")]),e._v(" and then press "),o("code",[e._v("Space")]),e._v(". You should see the following:")]),e._v(" "),o("p",[e._v("你可以通过"),o("strong",[e._v("快速打开")]),e._v("，在 VS Code 内直接创建和切换分支。按"),o("code",[e._v("kb（workbench.action.quickOpen）")]),e._v("，键入 "),o("code",[e._v("git")]),e._v(" ，然后按 "),o("code",[e._v("空格键")]),e._v(" 。您应该看到以下内容：")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/gitcommands.png",alt:"Git commands"}})]),e._v(" "),o("p",[e._v("If you type "),o("code",[e._v("checkout")]),e._v(" and press "),o("code",[e._v("kbstyle(Space)")]),e._v(" again, you will see a dropdown containing all of the branches or tags in the current repository.")]),e._v(" "),o("p",[e._v("如果您键入"),o("code",[e._v("checkout")]),e._v("并再次按"),o("code",[e._v("kbstyle(Space)")]),e._v("，您将看到一个下拉列表，其中包含当前仓库中的所有分支或标记，如下图：")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/gitbranches.png",alt:"Git checkout"}})]),e._v(" "),o("p",[e._v("The "),o("code",[e._v("git branch")]),e._v(" command lets you quickly create a new branch.  Just provide the name of your new branch and VS Code will create the branch and switch to it.")]),e._v(" "),o("p",[e._v("使用"),o("code",[e._v("git branch")]),e._v("命令可以快速创建一个新的分支。你只需提供新分支的名称，VS Code 将创建分支并切换到它。")]),e._v(" "),o("h2",{attrs:{id:"remotes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#remotes","aria-hidden":"true"}},[e._v("#")]),e._v(" Remotes")]),e._v(" "),o("p",[e._v("Given that your repository is connected to some remote and that your checked out branch has an "),o("a",{attrs:{href:"http://git-scm.com/book/ch3-5.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("upstream link"),o("OutboundLink")],1),e._v(" to a branch in that remote, VS Code offers you useful actions to "),o("strong",[e._v("push")]),e._v(", "),o("strong",[e._v("pull")]),e._v(" and "),o("strong",[e._v("sync")]),e._v(" that branch (the latter will run a "),o("strong",[e._v("pull")]),e._v(" command followed by a "),o("strong",[e._v("push")]),e._v(" command). You can find these actions in the "),o("code",[e._v("...")]),e._v(" menu.")]),e._v(" "),o("p",[e._v("鉴于您的仓库可能连接到远程，并且您的当前分支有一个"),o("a",{attrs:{href:"http://git-scm.com/book/ch3-5.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("上游分支"),o("OutboundLink")],1),e._v("，链接到该远程分支，VS Code 提供了方便的集成操作，"),o("strong",[e._v("push")]),e._v(", "),o("strong",[e._v("pull")]),e._v(" 和 "),o("strong",[e._v("同步")]),e._v("该分支（后者将运行一个PULL命令，然后PUSH）。您可以在"),o("code",[e._v("...")]),e._v("菜单中找到这些操作。")]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Tip:")]),e._v(" You should "),o("a",{attrs:{href:"https://help.github.com/articles/caching-your-github-password-in-git/",target:"_blank",rel:"noopener noreferrer"}},[e._v("set up a credential helper"),o("OutboundLink")],1),e._v(" to avoid getting asked for credentials every time VS Code talks to your Git remotes.  If you don't do this, you may want to consider disabling automatic fetching via the "),o("code",[e._v("git.autofetch")]),e._v(" "),o("router-link",{attrs:{to:"/docs/customization/userandworkspace.html"}},[e._v("setting")]),e._v(" to reduce the number of prompts you get.")],1)]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("提示：")]),e._v(" 您应该设置一个"),o("a",{attrs:{href:"https://help.github.com/articles/caching-your-github-password-in-git/",target:"_blank",rel:"noopener noreferrer"}},[e._v("credential helper"),o("OutboundLink")],1),e._v("，以避免每次VS Code 与您的 Git 远程仓库连接时要求输入凭据。如果不这样做，您可能需要考虑通过 "),o("code",[e._v("git.autofetch")]),e._v(" 设置禁用自动提取，以减少您收到的提示数。")])]),e._v(" "),o("h2",{attrs:{id:"合并冲突-merge-conflicts"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#合并冲突-merge-conflicts","aria-hidden":"true"}},[e._v("#")]),e._v(" 合并冲突(Merge Conflicts)")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/merge.png",alt:"Git merge"}})]),e._v(" "),o("p",[e._v("Merge conflicts are recognized by VS Code; we try to provide useful coloring markers to help you with resolving them. Once resolved, stage the conflicting file so you can commit those changes.")]),e._v(" "),o("p",[e._v("冲突的合并由 VS Code 识别;我们尝试提供有用的着色标记，以帮助您解决它们。一旦解决，突出冲突的文件，以便您可以提交这些更改。")]),e._v(" "),o("h2",{attrs:{id:"查看差异-viewing-diffs"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#查看差异-viewing-diffs","aria-hidden":"true"}},[e._v("#")]),e._v(" 查看差异(Viewing Diffs)")]),e._v(" "),o("p",[e._v("Our Git tooling supports viewing of diffs within VS Code.")]),e._v(" "),o("p",[e._v("我们的 Git 工具支持在VS Code中查看差异。")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/diff.png",alt:"A File Diff in VS Code"}})]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Tip:")]),e._v(" You can diff any two files by first right clicking on a file in the "),o("strong",[e._v("WORKING FILES")]),e._v(" list and selecting "),o("strong",[e._v("Select for Compare")]),e._v(" and then right-click on the second file to compare with and select "),o("strong",[e._v("Compare with 'file_name_you_chose'")]),e._v(".   Alternatively from the keyboard hit "),o("code",[e._v("kb(workbench.action.showCommands)")]),e._v(" and select "),o("strong",[e._v("File: Compare Active File With...")]),e._v(" and you will be presented with a list of recent files.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("提示：")]),e._v(" 首先右键单击"),o("strong",[e._v("WORKING FILES")]),e._v("列表中的文件并选择选择进行比较，然后右键单击"),o("strong",[e._v("要比较的第二个文件")]),e._v("，然后选择与"),o("code",[e._v("'file_name_you_chose'")]),e._v("比较，即可对任何两个文件进行diff。或者从键盘按下"),o("code",[e._v("kb（workbench.action.showCommands）")]),e._v("并选择文件："),o("code",[e._v("比较活动文件与其他")]),e._v("，您将看到一个最近的文件的列表。")])]),e._v(" "),o("h2",{attrs:{id:"git输出-git-output-window"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git输出-git-output-window","aria-hidden":"true"}},[e._v("#")]),e._v(" Git输出(Git Output Window)")]),e._v(" "),o("p",[e._v("You can always peek under the hood to see the Git commands we are using.  This is helpful if something strange is happening or if you simply get curious. 😃")]),e._v(" "),o("p",[e._v("你可以随时从 Git 输出窗口中看到我们使用的 Git 命令。如果有错误发生时它是非常有用的，或者如果你只是好奇。 😃")]),e._v(" "),o("p",[e._v("To open the Git output window, run "),o("strong",[e._v("View")]),e._v(" > "),o("strong",[e._v("Toggle Output")]),e._v(" and select "),o("code",[e._v("Git")]),e._v(" from the dropdown.")]),e._v(" "),o("p",[e._v("要打开Git输出窗口，请运行"),o("strong",[e._v("View> Toggle Output")]),e._v("，然后从下拉列表中选择 "),o("code",[e._v("Git")]),e._v("。")]),e._v(" "),o("h2",{attrs:{id:"初始化仓库-initialize-a-repository"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库-initialize-a-repository","aria-hidden":"true"}},[e._v("#")]),e._v(" 初始化仓库(Initialize a Repository)")]),e._v(" "),o("p",[e._v("If your workspace isn't under Git source control, you can easily create a Git repository with the "),o("strong",[e._v("Initialise git repository")]),e._v(" command.  When VS Code doesn't detect an existing Git repository, you will see a "),o("strong",[e._v("This workspace isn't yet under git source control.")]),e._v(" message in the Git View and the "),o("strong",[e._v("Initialize git repository")]),e._v(" command will be available.")]),e._v(" "),o("p",[e._v("如果您的工作空间未初始化 Git 仓库，您可以使用"),o("code",[e._v("Initialise git repository")]),e._v("命令轻松创建Git仓库。当 VS Code 没有检测到当前目录存在 Git 仓库时，您将看到一个"),o("code",[e._v("此工作空间尚未初始化 Git 仓库")]),e._v("。消息在"),o("code",[e._v("Git视图")]),e._v("和"),o("code",[e._v("初始化git仓库")]),e._v("命令将可用。")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/git-initialize.png",alt:"Git initialize repository"}})]),e._v(" "),o("p",[e._v("Running "),o("strong",[e._v("Initialize git repository")]),e._v(" will create the necessary Git repository metadata files and show your workspace files as unstaged changes.")]),e._v(" "),o("p",[e._v("运行"),o("strong",[e._v("初始化git仓库")]),e._v("将创建必要的Git仓库元数据文件，并将您的工作空间文件显示为未暂存的更改。")]),e._v(" "),o("h2",{attrs:{id:"git-patch-diff-模式-git-patch-diff-mode"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#git-patch-diff-模式-git-patch-diff-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Git patch/diff 模式(Git patch/diff mode)")]),e._v(" "),o("p",[e._v("When you run VS Code from the command line, you can pass the "),o("code",[e._v("--wait")]),e._v(" argument to make the command wait until you have closed the current VS Code instance. This can be used to configure VS Code as your Git external editor.")]),e._v(" "),o("p",[e._v("当从命令行运行VS Code时，您可以传递 "),o("code",[e._v("--wait")]),e._v("参数，使命令等待，直到您关闭当前 VS Code窗口。这可以用来配置 VS Code 作为你的 Git 外部编辑器。")]),e._v(" "),o("p",[e._v("Here are the steps to do so:")]),e._v(" "),o("ol",[o("li",[e._v("Make sure you can run "),o("code",[e._v("code --help")]),e._v(" from the command line and you get help.\n"),o("ul",[o("li",[e._v("if you do not see help, please follow these steps:\n"),o("ul",[o("li",[e._v("Mac: Select "),o("strong",[e._v("Shell Command: Install 'Code' command in path")]),e._v(" from the "),o("strong",[e._v("Command Palette")]),e._v(".")]),e._v(" "),o("li",[e._v("Windows: Make sure you selected "),o("strong",[e._v("Add to PATH")]),e._v(" during the installation.")]),e._v(" "),o("li",[e._v("Linux: Make sure you installed Code via our new .deb or .rpm packages.")])])])])]),e._v(" "),o("li",[e._v("From the command line, run "),o("code",[e._v('git config --global core.editor "code --wait"')])])]),e._v(" "),o("p",[e._v("下面是这样做的一些建议：")]),e._v(" "),o("ol",[o("li",[e._v("确保你可以从命令行运行 "),o("code",[e._v("code --help")]),e._v(" 命令，并能得到帮助。\n"),o("ul",[o("li",[e._v("如果你没有看见帮助，尝试以下操作：\n"),o("ul",[o("li",[e._v("Mac：选择 "),o("strong",[e._v("Shell命令：在命令面板的路径中安装'code'命令")]),e._v("。")]),e._v(" "),o("li",[e._v("Windows：确保你安装时添加了环境变量到 "),o("code",[e._v("PATH")]),e._v("。")]),e._v(" "),o("li",[e._v("Linux：确保您通过我们的新的.deb或.rpm软件包安装了VS Code。")])])])])]),e._v(" "),o("li",[e._v("从命令行，运行 "),o("code",[e._v("git config --global core.editor“code --wait”")])])]),e._v(" "),o("p",[e._v("Now you can run "),o("code",[e._v("git config --global -e")]),e._v(" and use VS Code as editor for configuring Git.")]),e._v(" "),o("p",[e._v("现在，您可以运行 "),o("code",[e._v("git config --global -e")]),e._v(" 并使用 VS Code 作为编辑器来配置 Git。")]),e._v(" "),o("p",[o("img",{attrs:{src:"images/versioncontrol/gitconfig.png",alt:"git config in VS Code"}})]),e._v(" "),o("p",[e._v("Add the following to your Git configurations to use VS Code as the diff tool:")]),e._v(" "),o("p",[e._v("将以下内容添加到您的 Git 配置中，以使用VS Code作为比较差异的工具：")]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("diff"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    tool "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" default-difftool\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("difftool "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v('"default-difftool"')]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    cmd "),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" code --wait --diff "),o("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$LOCAL")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$REMOTE")]),e._v("\n")])])]),o("p",[e._v("This leverages the "),o("code",[e._v("--diff")]),e._v(" option you can pass to VS Code to compare 2 files side by side.")]),e._v(" "),o("p",[e._v("这利用 "),o("code",[e._v("--diff")]),e._v(" 选项，可以传递到VS Code，以并排比较2个文件。")]),e._v(" "),o("p",[e._v("To summarize, here are some examples of where you can use VS Code as the editor:")]),e._v(" "),o("p",[e._v("总而言之，下面是一些可以使用VS Code作为编辑器的示例：")]),e._v(" "),o("ul",[o("li",[o("p",[o("code",[e._v("git rebase HEAD~3 -i")]),e._v(" do interactive rebase using VS Code")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git commit")]),e._v(" use VS Code for the commit message")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git add -p")]),e._v(" followed by "),o("code",[e._v("kbstyle(e)")]),e._v(" for interactive add")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git difftool <commit>^ <commit>")]),e._v(" use VS Code as the diff editor for changes")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git rebase HEAD~3 -i")]),e._v(" do interactive rebase using VS Code")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git commit")]),e._v(" use VS Code for the commit message")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git add -p")]),e._v(" followed by "),o("code",[e._v("kbstyle(e)")]),e._v(" for interactive add")])]),e._v(" "),o("li",[o("p",[o("code",[e._v("git difftool <commit>^ <commit>")]),e._v(" use VS Code as the diff editor for changes")])])]),e._v(" "),o("h2",{attrs:{id:"下一步-next-steps"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#下一步-next-steps","aria-hidden":"true"}},[e._v("#")]),e._v(" 下一步(Next Steps)")]),e._v(" "),o("ul",[o("li",[o("router-link",{attrs:{to:"/docs/editor/editingevolved.html"}},[e._v("Editing Evolved")]),e._v(" - Lint, IntelliSense, Lightbulbs, Peek and Goto Definition and more")],1),e._v(" "),o("li",[o("router-link",{attrs:{to:"/docs/editor/debugging.html"}},[e._v("Debugging")]),e._v(" - This is where VS Code really shines")],1),e._v(" "),o("li",[o("router-link",{attrs:{to:"/docs/editor/tasks.html"}},[e._v("Tasks")]),e._v(" - Running tasks with Gulp, Grunt and Jake.  Showing Errors and Warnings")],1),e._v(" "),o("li",[o("router-link",{attrs:{to:"/docs/customization/overview.html"}},[e._v("Customization")]),e._v(" - Themes, settings and keyboard bindings")],1)]),e._v(" "),o("h2",{attrs:{id:"常见问题-common-questions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-common-questions","aria-hidden":"true"}},[e._v("#")]),e._v(" 常见问题(Common Questions)")]),e._v(" "),o("p",[o("strong",[e._v("Q: Hey, I initialized my repo but the actions in the "),o("code",[e._v("...")]),e._v(" menu are all grayed out. What gives?")])]),e._v(" "),o("p",[o("strong",[e._v("A:")]),e._v(" To "),o("strong",[e._v("push, pull and sync")]),e._v(" you need to have a Git origin set up.  You can get the required URL from the repo host.  Once you have that URL, you simply need to add it to the Git settings by running a couple of command line actions. For example, for Visual Studio Team Services:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("> git remote add origin https://<AccountName>.visualstudio.com/DefaultCollection/_git/<RepoName>\n> git push -u origin master\n")])])]),o("p",[o("strong",[e._v("Q: My team is using Team Foundation version control (TFVC) instead of Git. What should I do?")])]),e._v(" "),o("p",[o("strong",[e._v("A:")]),e._v(" Use the Team Foundation command line tools.")]),e._v(" "),o("ul",[o("li",[e._v("For cross-platform use: "),o("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/hh873092.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cross-Platform Command-Line Client Beginner's Guide"),o("OutboundLink")],1)]),e._v(" "),o("li",[e._v("For Windows: "),o("a",{attrs:{href:"https://msdn.microsoft.com/en-us/library/vstudio/cc31bk2e.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Use Team Foundation version control commands"),o("OutboundLink")],1)])]),e._v(" "),o("p",[o("strong",[e._v("Q: Why do the Pull, Push and Sync actions never finish?")])]),e._v(" "),o("p",[e._v("This usually means there is no credential management configured in Git and you're not getting credential prompts for some reason.")]),e._v(" "),o("p",[e._v("You can always set up a "),o("a",{attrs:{href:"https://help.github.com/articles/caching-your-github-password-in-git/",target:"_blank",rel:"noopener noreferrer"}},[e._v("credential helper"),o("OutboundLink")],1),e._v(" in order to pull and push from a remote server without having VS Code prompt for your credentials each time.")]),e._v(" "),o("p",[o("strong",[e._v("Q: How can I sign into Git with my Team Services account which requires multi-factor authentication?")])]),e._v(" "),o("p",[o("strong",[e._v("A:")]),e._v(" There are now "),o("a",{attrs:{href:"http://blogs.msdn.com/b/visualstudioalm/archive/2015/11/18/visual-studio-team-services-git-credential-manager-for-mac-and-linux.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git credential helpers"),o("OutboundLink")],1),e._v(" that assist with multi-factor authentication. You can download these from "),o("a",{attrs:{href:"https://github.com/Microsoft/Git-Credential-Manager-for-Mac-and-Linux",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Credential Manager for Mac and Linux"),o("OutboundLink")],1),e._v(" and "),o("a",{attrs:{href:"https://github.com/Microsoft/Git-Credential-Manager-for-Windows",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git Credential Manager for Windows"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("p",[o("strong",[e._v("Q: Using Visual Studio Code, I accidentally initialized a Git repo on a folder with a massive number of files, like my entire hard drive. Now VS Code is too slow to use or hangs. What do I do?")])]),e._v(" "),o("p",[o("strong",[e._v("A:")]),e._v(" First, to get VS Code running again, exit VS Code, then open a command prompt and run")]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[e._v("code -n\n")])])]),o("p",[e._v("which opens VS Code in a new window.")]),e._v(" "),o("p",[e._v("Next, assuming you want to remove the unintended repo initialization, look for the "),o("code",[e._v(".git")]),e._v(" sub-folder in the large folder where you unintentionally initialized the repo, and then delete it. Note that "),o("code",[e._v(".git")]),e._v(" is a hidden folder, so you might need to show hidden folders to see it. For example, at a command prompt in Windows you can run "),o("code",[e._v("dir .git /ah")]),e._v(" to see hidden folders named "),o("code",[e._v(".git")]),e._v(" in a specific folder. If you are not sure where you created the initial folder, run "),o("code",[e._v("dir .git /ah /s")]),e._v(" at the root folder to see hidden "),o("code",[e._v(".git")]),e._v(" folders, including sub-folders.")]),e._v(" "),o("p",[o("strong",[e._v("Q: I have GitHub Desktop installed on my computer but VS Code ignores it.")])]),e._v(" "),o("p",[o("strong",[e._v("A:")]),e._v(" VS Code expects "),o("code",[e._v("git.exe")]),e._v(" to be on the operating system's "),o("code",[e._v("PATH")]),e._v(" ("),o("code",[e._v("$PATH")]),e._v(" on OS X or Linux).  "),o("strong",[e._v("GitHub Desktop")]),e._v(" installs isolated git binaries and does not automatically add "),o("code",[e._v("git.exe")]),e._v(" to "),o("code",[e._v("PATH")]),e._v(".")]),e._v(" "),o("p",[e._v("You can either:")]),e._v(" "),o("ul",[o("li",[e._v("Add the location of "),o("code",[e._v("git.exe")]),e._v(" to "),o("code",[e._v("PATH")]),e._v(" and restart VS Code.")]),e._v(" "),o("li",[e._v("Set the "),o("code",[e._v("git.path")]),e._v(" "),o("router-link",{attrs:{to:"/docs/customization/userandworkspace.html"}},[e._v("setting")]),e._v(" to the location of "),o("code",[e._v("git.exe")]),e._v(".")],1)]),e._v(" "),o("p",[e._v("On a "),o("strong",[e._v("GitHub Desktop")]),e._v(" Windows installation, "),o("code",[e._v("git.exe")]),e._v(" is usually under "),o("code",[e._v("C:\\Users\\USERNAME\\AppData\\Local\\GitHub\\PortableGit_COMMITID\\ming32\\bin")]),e._v(".  Searching for "),o("code",[e._v("git.exe")]),e._v(" under AppData\\Local\\GitHub should find the binary.")]),e._v(" "),o("p",[e._v("You can also install Git from "),o("a",{attrs:{href:"http://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("git-scm"),o("OutboundLink")],1),e._v(" and this will not interfere with "),o("strong",[e._v("GitHub Desktop")]),e._v(".")])])},[],!1,null,null,null);t.default=r.exports}}]);