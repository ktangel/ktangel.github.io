(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{230:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"用户和工作区设置-user-and-workspace-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户和工作区设置-user-and-workspace-settings","aria-hidden":"true"}},[t._v("#")]),t._v(" 用户和工作区设置(User and Workspace Settings)")]),t._v(" "),e("p",[t._v("It's easy to configure VS Code the way you want by editing the various setting files where you will find a great number of settings to play with.")]),t._v(" "),e("p",[t._v("很容易通过编辑各种设置文件来配置VS Code，你会发现许多有意思的设置。")]),t._v(" "),e("p",[t._v("VS Code provides two different scopes for settings:")]),t._v(" "),e("p",[t._v("VS Code 的设置分为两种作用域：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("User")]),t._v(" these settings apply globally to any instance of VS Code you open")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("Workspace")]),t._v(" these settings are stored inside your workspace in a "),e("code",[t._v(".vscode")]),t._v(" folder and only apply when the workspace is opened. Settings defined on this scope overwrite the user scope.")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("用户设置")]),t._v(" 这些设置全局应用于您打开的任何VS Code 项目")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("工作区设置")]),t._v(" 这些设置存储在工作区内的 "),e("code",[t._v(".vscode")]),t._v(" 文件夹中，并且仅在打开的工作区适用。在此范围上定义的设置将覆盖用户范围的设置。")])])]),t._v(" "),e("h2",{attrs:{id:"创建用户和工作区设置-creating-user-and-workspace-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建用户和工作区设置-creating-user-and-workspace-settings","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建用户和工作区设置(Creating User and Workspace Settings)")]),t._v(" "),e("p",[t._v("The menu under "),e("strong",[t._v("File")]),t._v(" > "),e("strong",[t._v("Preferences")]),t._v(" provides entries to configure user and workspace settings. You are provided with a list of Default Settings. Copy any setting that you want to change to the related "),e("code",[t._v("settings.json")]),t._v(" file.")]),t._v(" "),e("p",[e("code",[t._v("文件>首选项")]),t._v(" 下的 "),e("code",[t._v("菜单")]),t._v(" 提供用于配置用户和工作空间设置的选项。您将看到一个默认设置列表。将要更改的任何设置复制到相关的（右侧） "),e("code",[t._v("settings.json")]),t._v(" 文件。")]),t._v(" "),e("p",[t._v("In the example below, we disabled line numbers in the editor and configured line wrapping to wrap automatically based on the size of the editor.")]),t._v(" "),e("p",[t._v("如下面的示例，我们在编辑器中禁用了 "),e("code",[t._v("行号")]),t._v(" ，并且配置换行为根据编辑器的大小自动换行。")]),t._v(" "),e("p",[e("img",{attrs:{src:"images/userandworkspace/settings.png",alt:"Example Settings"}})]),t._v(" "),e("p",[t._v("Changes to settings are reloaded by VS Code after the modified "),e("code",[t._v("settings.json")]),t._v(" file is saved.")]),t._v(" "),e("p",[t._v("保存修改的 "),e("code",[t._v("settings.json")]),t._v(" 文件后，VS Code 将重新加载对设置的更改。")]),t._v(" "),e("h2",{attrs:{id:"设置文件的位置-settings-file-locations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置文件的位置-settings-file-locations","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置文件的位置(Settings File Locations)")]),t._v(" "),e("p",[t._v("Depending on your platform, the user settings file is located here:")]),t._v(" "),e("p",[t._v("根据您的操作系统，用户设置文件位于下面几处：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Windows")]),t._v(" "),e("code",[t._v("%APPDATA%\\Code\\User\\settings.json")])]),t._v(" "),e("li",[e("strong",[t._v("Mac")]),t._v(" "),e("code",[t._v("$HOME/Library/Application Support/Code/User/settings.json")])]),t._v(" "),e("li",[e("strong",[t._v("Linux")]),t._v(" "),e("code",[t._v("$HOME/.config/Code/User/settings.json")])])]),t._v(" "),e("p",[t._v("The workspace setting file is located under the "),e("code",[t._v(".vscode")]),t._v(" folder in your project.")]),t._v(" "),e("p",[t._v("工作区设置文件位于项目中的 "),e("code",[t._v(".vscode")]),t._v(" 文件夹下。")]),t._v(" "),e("h2",{attrs:{id:"设置文件内容-settings-file-sections"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置文件内容-settings-file-sections","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置文件内容(Settings File Sections)")]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("settings.json")]),t._v(" file is divided into these sections:")]),t._v(" "),e("p",[e("code",[t._v("settings.json")]),t._v(" 文件分为以下几个部分：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Editor Configuration")]),t._v(" - font, word wrapping, tab size, line numbers, indentation, ...")]),t._v(" "),e("li",[e("strong",[t._v("Window Configuration")]),t._v(" - restore folders, zoom level, ...")]),t._v(" "),e("li",[e("strong",[t._v("Files Configuration")]),t._v(" - excluded file filters, default encoding, trim trailing whitespace, ...")]),t._v(" "),e("li",[e("strong",[t._v("File Explorer Configuration")]),t._v(" - encoding, "),e("strong",[t._v("WORKING FILES")]),t._v(" behavior, ...")]),t._v(" "),e("li",[e("strong",[t._v("HTTP Configuration")]),t._v(" - proxy settings")]),t._v(" "),e("li",[e("strong",[t._v("Search Configuration")]),t._v(" - file exclude filters")]),t._v(" "),e("li",[e("strong",[t._v("Git Configuration")]),t._v(" - disable Git integration, auto fetch behavior")]),t._v(" "),e("li",[e("strong",[t._v("Telemetry Configuration")]),t._v(" - disable telemetry reporting, crash reporting")]),t._v(" "),e("li",[e("strong",[t._v("HTML Configuration")]),t._v(" - HTML format configuration")]),t._v(" "),e("li",[e("strong",[t._v("CSS Configuration")]),t._v(" - CSS linting configuration")]),t._v(" "),e("li",[e("strong",[t._v("JavaScript Configuration")]),t._v(" - Language specific settings")]),t._v(" "),e("li",[e("strong",[t._v("JSON Configuration")]),t._v(" - Schemas associated with certain JSON files")]),t._v(" "),e("li",[e("strong",[t._v("Markdown Preview Configuration")]),t._v(" - Add a custom CSS to the Markdown preview")]),t._v(" "),e("li",[e("strong",[t._v("Less Configuration")]),t._v(" - Control linting for Less")]),t._v(" "),e("li",[e("strong",[t._v("Sass Configuration")]),t._v(" - Control linting for Sass")]),t._v(" "),e("li",[e("strong",[t._v("TypeScript Configuration")]),t._v(" - Language specific settings")]),t._v(" "),e("li",[e("strong",[t._v("PHP Configuration")]),t._v(" - PHP linter configuration")])]),t._v(" "),e("h2",{attrs:{id:"默认设置-default-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#默认设置-default-settings","aria-hidden":"true"}},[t._v("#")]),t._v(" 默认设置(Default Settings)")]),t._v(" "),e("p",[t._v("Below is a copy of the default "),e("code",[t._v("settings.json")]),t._v(" file.")]),t._v(" "),e("p",[t._v("下面是默认的 "),e("code",[t._v("settings.json")]),t._v(" 文件的实例。")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("Tip:")]),t._v(" While in the "),e("code",[t._v("settings.json")]),t._v(" file, press "),e("code",[t._v("kb(workbench.action.gotoSymbol)")]),t._v(" to see an outline of all available settings and navigate through the file.")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("提示：")]),t._v(" 在 "),e("code",[t._v("settings.json")]),t._v(" 文件中，按 "),e("code",[t._v("kb（workbench.action.gotoSymbol）")]),t._v(" 可查看所有可用设置的大纲，并浏览该文件。")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Overwrite settings by placing them into your settings file.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Editor configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the font family.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.fontFamily"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the font size.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.fontSize"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the line height.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.lineHeight"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls visibility of line numbers")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.lineNumbers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls visibility of the glyph margin")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.glyphMargin"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Columns at which to show vertical rulers")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.rulers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Characters that will be used as word separators when doing word related navigations or operations")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.wordSeparators"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"`~!@#$%^&*()-=+[{]}\\\\|;:\'\\",.<>/?"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The number of spaces a tab is equal to.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.tabSize"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Insert spaces when pressing Tab.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.insertSpaces"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.detectIndentation"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if selections have rounded corners")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.roundedSelection"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the editor will scroll beyond the last line")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.scrollBeyondLastLine"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls after how many characters the editor will wrap to the next line. Setting this to 0 turns on viewport width wrapping")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.wrappingColumn"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.wrappingIndent"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"same"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.mouseWheelScrollSensitivity"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if quick suggestions should show up or not while typing")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.quickSuggestions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the delay in ms after which quick suggestions will show up")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.quickSuggestionsDelay"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the editor should automatically close brackets after opening them")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.autoClosingBrackets"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the editor should automatically format the line after typing")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.formatOnType"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if suggestions should automatically show up when typing trigger characters")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.suggestOnTriggerCharacters"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.acceptSuggestionOnEnter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls whether the editor should highlight similar matches to the selection")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.selectionHighlight"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the number of decorations that can show up at the same position in the overview ruler")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.overviewRulerLanes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the cursor blinking animation, accepted values are 'blink', 'visible', and 'hidden'")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.cursorBlinking"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blink"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls the cursor style, accepted values are 'block' and 'line'")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.cursorStyle"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"line"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enables font ligatures")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.fontLigatures"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the cursor should be hidden in the overview ruler.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.hideCursorInOverviewRuler"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls whether the editor should render whitespace characters")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.renderWhitespace"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the editor shows reference information for the modes that support it")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.referenceInfos"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls whether the editor has code folding enabled")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"editor.folding"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the diff editor shows the diff side by side or inline")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"diffEditor.renderSideBySide"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls if the diff editor shows changes in leading or trailing whitespace as diffs")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"diffEditor.ignoreTrimWhitespace"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Window configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When enabled, will open files in a new window instead of reusing an existing instance.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"window.openFilesInNewWindow"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"window.reopenFolders"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"one"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"window.zoomLevel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Files configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configure glob patterns for excluding files and folders.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.exclude"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/.git"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/.DS_Store"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Configure file associations to languages (e.g. "*.extension": "html"). These have precedence over the default associations of the languages installed.')]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.associations"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The default character set encoding to use when reading and writing files.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.encoding"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf8"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The default end of line character.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.eol"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When enabled, will trim trailing whitespace when you save a file.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.trimTrailingWhitespace"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange". If set to "afterDelay" you can configure the delay in "files.autoSaveDelay".')]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.autoSave"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"off"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"')]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.autoSaveDelay"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"files.watcherExclude"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/.git/objects/**"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/node_modules/**"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- File Explorer configuration --------")]),t._v("\n\n\t// Maximum number of working files to show before scrollbars appear.\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"explorer.workingFiles.maxVisible"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t// Controls if the height of the working files section should adapt dynamically to the number of elements or not.\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"explorer.workingFiles.dynamicHeight"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t//-------- HTTP configuration --------\n\n\t// The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"http.proxy"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t// Whether the proxy server certificate should be verified against the list of supplied CAs.\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"http.proxyStrictSSL"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t//-------- Update configuration --------\n\n\t// Configure the update channel to receive updates from. Requires a restart after change.\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"update.channel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t//-------- Search configuration --------\n\n\t// Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the file.exclude setting.\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"search.exclude"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/node_modules"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"**/bower_components"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Git configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Is git enabled")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"git.enabled"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Path to the git executable")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"git.path"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Whether auto fetching is enabled.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"git.autofetch"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Telemetry configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable usage data and errors to be sent to Microsoft.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"telemetry.enableTelemetry"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Markdown preview configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A list of URLs or local paths to CSS style sheets to use from the markdown preview.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"markdown.styles"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- JSON configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Associate schemas to JSON files in the current project")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"json.schemas"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- HTML configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Maximum amount of characters per line (0 = disable).")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.wrapLineLength"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all inline tags.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.unformatted"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Indent <head> and <body> sections.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.indentInnerHtml"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.preserveNewLines"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.maxPreserveNewLines"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Format and indent {{#foo}} and {{/foo}}.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.indentHandlebars"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// End with a newline.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.endWithNewline"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List of tags, comma separated, that should have an extra newline before them. 'null' defaults to \"head, body, /html\".")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"html.format.extraLiners"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Telemetry configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable crash reports to be sent to Microsoft.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This option requires restart to take effect.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"telemetry.enableCrashReporter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- CSS configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls CSS validation and problem severities.")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enables or disables all validations")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.validate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix make sure to also include all other vendor-specific properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.compatibleVendorPrefixes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix also include the standard property")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.vendorPrefix"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use duplicate style definitions")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.duplicateProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use empty rulesets")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.emptyRules"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import statements do not load in parallel")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.importStatement"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use width or height when using padding or border")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.boxModel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The universal selector (*) is known to be slow")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.universalSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No unit for zero needed")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.zeroUnits"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @font-face rule must define 'src' and 'font-family' properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.fontFaceProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hex colors must consist of three or six hex numbers")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.hexColorLength"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Invalid number of parameters")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.argumentsInColorFunction"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.unknownProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE hacks are only necessary when supporting IE7 and older")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.ieHack"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown vendor specific property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.unknownVendorSpecificProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.propertyIgnoredDueToDisplay"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.important"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.float"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"css.lint.idSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- LESS configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls LESS validation and problem severities.")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enables or disables all validations")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.validate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix make sure to also include all other vendor-specific properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.compatibleVendorPrefixes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix also include the standard property")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.vendorPrefix"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use duplicate style definitions")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.duplicateProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use empty rulesets")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.emptyRules"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import statements do not load in parallel")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.importStatement"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use width or height when using padding or border")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.boxModel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The universal selector (*) is known to be slow")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.universalSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No unit for zero needed")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.zeroUnits"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @font-face rule must define 'src' and 'font-family' properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.fontFaceProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hex colors must consist of three or six hex numbers")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.hexColorLength"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Invalid number of parameters")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.argumentsInColorFunction"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.unknownProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE hacks are only necessary when supporting IE7 and older")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.ieHack"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown vendor specific property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.unknownVendorSpecificProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.propertyIgnoredDueToDisplay"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.important"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.float"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"less.lint.idSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- Sass configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Controls Sass validation and problem severities.")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enables or disables all validations")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.validate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix make sure to also include all other vendor-specific properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.compatibleVendorPrefixes"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When using a vendor-specific prefix also include the standard property")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.vendorPrefix"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use duplicate style definitions")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.duplicateProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use empty rulesets")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.emptyRules"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import statements do not load in parallel")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.importStatement"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Do not use width or height when using padding or border")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.boxModel"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The universal selector (*) is known to be slow")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.universalSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No unit for zero needed")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.zeroUnits"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @font-face rule must define 'src' and 'font-family' properties")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.fontFaceProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Hex colors must consist of three or six hex numbers")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.hexColorLength"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Invalid number of parameters")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.argumentsInColorFunction"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.unknownProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// IE hacks are only necessary when supporting IE7 and older")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.ieHack"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Unknown vendor specific property.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.unknownVendorSpecificProperties"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.propertyIgnoredDueToDisplay"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"warning"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.important"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.float"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Selectors should not contain IDs because these rules are too tightly coupled with the HTML.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sass.lint.idSelector"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ignore"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- TypeScript configuration --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Specifies the folder path containing the tsserver and lib*.d.ts files to use.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.tsdk"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Complete functions with their parameter signature.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.useCodeSnippetsOnMethodSuggest"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable / disable TypeScript validation")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.validate.enable"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after a comma delimiter")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterCommaDelimiter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Defines space handling after a semicolon in a for statement")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterSemicolonInForStatements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after a binary operator")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceBeforeAndAfterBinaryOperators"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after keywords in control flow statement")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after function keyword for anonymous functions")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after opening and before closing non empty parenthesis")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after opening and before closing non empty brackets")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines whether an open brace is put onto a new line for functions or not")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.placeOpenBraceOnNewLineForFunctions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines whether an open brace is put onto a new line for control blocks or not")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript.format.placeOpenBraceOnNewLineForControlBlocks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enable / disable JavaScript validation")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.validate.enable"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after a comma delimiter")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterCommaDelimiter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  Defines space handling after a semicolon in a for statement")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterSemicolonInForStatements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after a binary operator")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceBeforeAndAfterBinaryOperators"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after keywords in control flow statement")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after function keyword for anonymous functions")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after opening and before closing non empty parenthesis")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines space handling after opening and before closing non empty brackets")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines whether an open brace is put onto a new line for functions or not")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.placeOpenBraceOnNewLineForFunctions"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Defines whether an open brace is put onto a new line for control blocks or not")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"javascript.format.placeOpenBraceOnNewLineForControlBlocks"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//-------- PHP Configuration options --------")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Whether php validation is enabled or not.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"php.validate.enable"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Points to the php executable.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"php.validate.executablePath"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token null keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Whether the linter is run on save or on type.")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"php.validate.run"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onSave"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"common-questions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#common-questions","aria-hidden":"true"}},[t._v("#")]),t._v(" Common Questions")]),t._v(" "),e("p",[e("strong",[t._v("Q: When does it make sense to use workspace settings?")])]),t._v(" "),e("p",[e("strong",[t._v("A:")]),t._v(" If you're using a workspace that needs custom settings but you don't want to apply them to your other VS Code projects. A good example is language-specific linting rules.")])])},[],!1,null,null,null);s.default=a.exports}}]);