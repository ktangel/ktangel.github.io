(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{370:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"调试器示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调试器示例"}},[t._v("#")]),t._v(" 调试器示例")]),t._v(" "),a("p",[t._v("因为VS Code只是实现了一个通用的(未知语言)调试器界面，所以他不能和真正的调试器直接通信，而是通过一个所谓的"),a("em",[t._v("调试适配器")]),t._v("使用一个抽象的写入协议来通信。我们称这个协议为"),a("em",[t._v("VS Code Debug Protocol")]),t._v("（简写为CDP）。\n一个调试适配器是一个单独的可执行程序，它和真正的调试器通信并且将抽象的CDP装换为针对调试器的具体的调试协议。")]),t._v(" "),a("p",[a("img",{attrs:{src:"images/example-debuggers/debug-arch.png",alt:"调试器架构"}})]),t._v(" "),a("p",[t._v("为了避免本地防火墙的问题，VS Code通过标准输入/输出来替代其他复杂的方式和适配器通信。")]),t._v(" "),a("p",[t._v("每个调试适配器定义了一个从VS Code启动配置中引用的调试"),a("code",[t._v("类型")]),t._v("。\n当调试会话启动后，VS Code查找一个基于调试类型的调试适配器然后在单独的进程中启动可执行文件。当调试会话结束后，调试适配器停止运行。")]),t._v(" "),a("p",[t._v("调试适配器是VS Code的扩展性架构的一部分：他们被作为插件发布。之所以将调试适配器和其他插件分开是因为调试适配器的代码不运行在插件实例上，而是一个单独的程序。有两个原因：第一，使得可以使用对于调试器或者运行时来说最适合的语言来实现适配器。第二，如果有需要，一个单独的程序可以更容易地运行在高级权限下。")]),t._v(" "),a("p",[t._v("VS Code只内嵌了Node.js的调试器插件更多的调试器插件可以从这里找到"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/vscode/Debuggers",target:"_blank",rel:"noopener noreferrer"}},[t._v("VS Code 市场"),a("OutboundLink")],1),t._v("或者你可以自己创建一个调试器插件。")]),t._v(" "),a("p",[t._v("这篇文档将向你展示如何创建一个新的调试器插件。")]),t._v(" "),a("p",[a("img",{attrs:{src:"images/example-debuggers/debug-arch.png",alt:"Debugger Architecture"}})]),t._v(" "),a("p",[t._v("为了避开本地防火墙问题，VS Code通过 stdin/stdout 来和网络适配器对话，而不是使用一个更加复杂的对话机制。")]),t._v(" "),a("p",[t._v("每个调试适配器声明了一个会被 VS Code 启动配置里面读取的调试类型。当一段调试开始时，VS Code寻找基于调试类型的调试适配器，然后启动一个可独立线程运行的可执行文件。当一段调试结束时，适配器停止工作。")]),t._v(" "),a("p",[t._v("调试适配器是VS Code可扩展架构的一部分：他们贡献于插件。和其他插件不同的是调试适配器代码不是运行在插件主机上，而是一个独立程序上。有两方面原因：首先，可以以一种，对于给定调试器或者运行时最合适语言，来实现适配器；第二，如果需要的话，一个独立程序可以在一个高级模式下更容易运行。")]),t._v(" "),a("p",[t._v("VS Code为 Node.js实现了一个调试插件。更多调试器插件可见"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/vscode/Debuggers",target:"_blank",rel:"noopener noreferrer"}},[t._v("VS Code 商店"),a("OutboundLink")],1),t._v("，你也可以自己创造一个调试插件.")]),t._v(" "),a("p",[t._v("这篇文档将会告诉你如何创建一个新的调试插件。")]),t._v(" "),a("h2",{attrs:{id:"安装一个调试器插件示例-installing-a-sample-debug-extension"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装一个调试器插件示例-installing-a-sample-debug-extension"}},[t._v("#")]),t._v(" 安装一个调试器插件示例        Installing a Sample Debug Extension")]),t._v(" "),a("p",[t._v("因为对于入门教程来说，从零开始创建一个调试适配器有些太复杂了。我们将从一个我们为了教学而创建的'starter kit'简单的调试适配器开始。它名叫'mock-debug' 因为它并没有和真正的调试器通讯，而是虚拟了一个。所以mock-debug模拟了一个调试适配器并且支持单步，继续，断点，异常和变量查看但是它并没有连接到真正的调试器。")]),t._v(" "),a("p",[t._v("在探索mock-debug的开发环境设置之前，让我们先从VS Code市场上安装一个"),a("a",{attrs:{href:"https://marketplace.visualstudio.com/items/andreweinand.mock-debug",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成前版本"),a("OutboundLink")],1),t._v("，做如下操作：")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("strong",[t._v("命令面板")]),t._v(" "),a("code",[t._v("扩展: 安装扩展")]),t._v(" 找到并安装mock-debug插件，")]),t._v(" "),a("li",[t._v("重新启动VS Code。")])]),t._v(" "),a("p",[t._v("尝试如下步骤:")]),t._v(" "),a("ul",[a("li",[t._v("在VS Code中，创建一个测试项目和一个新的程序文件"),a("code",[t._v("readme.md")]),t._v("然后随意的输入几行文本。")]),t._v(" "),a("li",[t._v("切换到调试试图并且按下齿轮图标。")]),t._v(" "),a("li",[t._v('VS Code将让你选择调试环境(选择"Mock Debugger")然后会创建一个默认的启动配置。')])]),t._v(" "),a("p",[t._v("如果你开始了启动配置，你可以单步调试目标文件，设置断点，运行进异常(如果单词"),a("code",[t._v("exception")]),t._v("出现在某一行里).")]),t._v(" "),a("p",[a("img",{attrs:{src:"images/example-debuggers/mock-debug.gif",alt:"虚拟调试器运行"}})]),t._v(" "),a("h2",{attrs:{id:"mock-debug开发环境建立"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mock-debug开发环境建立"}},[t._v("#")]),t._v(" mock-debug开发环境建立")]),t._v(" "),a("p",[t._v("现在让我们获取mock-debug的源码并开始在 VS Code上开发吧：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/Microsoft/vscode-mock-debug.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" vscode-mock-debug\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),a("p",[t._v("在VS Code中打开"),a("code",[t._v("vscode-mock-debug")]),t._v("项目目录。")]),t._v(" "),a("p",[t._v("包中有什么？")]),t._v(" "),a("ul",[a("li",[t._v("mock-debug实现在"),a("code",[t._v("src/mockDebug.ts")]),t._v("。这里你可以找到各种CDP请求的请求处理。")]),t._v(" "),a("li",[a("code",[t._v("package.json")]),t._v("，mock-debug插件的清单文件：\n"),a("ul",[a("li",[t._v("列举mock-debug插件的配置项")]),t._v(" "),a("li",[a("code",[t._v("compile")]),t._v("和"),a("code",[t._v("watch")]),t._v("用来转换TypeScript源码到"),a("code",[t._v("out")]),t._v("目录并且监控随后的代码修改。")]),t._v(" "),a("li",[t._v("两个依赖项"),a("code",[t._v("vscode-debugprotocol")]),t._v("和"),a("code",[t._v("vscode-debugadapter")]),t._v("是基于node的调试适配器的简单开发环境NPM模块。")])])])]),t._v(" "),a("p",[t._v("现在通过选择"),a("code",[t._v("Launch Extension")]),t._v("配置并且敲击"),a("code",[t._v("F5")]),t._v("来构建并启动调试适配器。\n最开始将会完全的将TypeScript源码转换到"),a("code",[t._v("out")]),t._v("目录。\n在完全构建之后，'观察任务'将被启动并增量转换接下来的改动。")]),t._v(" "),a("p",[t._v("在构建完成之后，一个在调试模式运行mock-debug插件的新的VS Code窗口将显示出来。\n现在你可以打开你的测试项目中的"),a("code",[t._v("readme.md")]),t._v("文件并'调试'它。")]),t._v(" "),a("p",[t._v("就像像其他插件一样"),a("strong",[t._v("运行")]),t._v("来启动调试插件相对于"),a("strong",[t._v("调试")]),t._v("来说工作的很好。问题是调试适配器运行在插件实例外的一个单独的进程中。\n解决方案是以服务模式运行调试适配器：")]),t._v(" "),a("ul",[a("li",[t._v("运行"),a("code",[t._v("mock-debug server")]),t._v("启动配置来以服务模式启动调试适配器(它监听4711端口)")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("mockDebug.ts")]),t._v("文件里的"),a("code",[t._v("launchRequest(...)")]),t._v("方法的开始设置断点")]),t._v(" "),a("li",[t._v("在额外的VS Code窗口打开测试项目的"),a("code",[t._v("readme.md")])]),t._v(" "),a("li",[t._v("在项目里添加顶级"),a("code",[t._v("debugServer")]),t._v("属性，如同下面代码：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.2.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debugServer"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4711")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceRoot}/readme.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果你现在启动调试配置，VS Code将不会在单独的进程启动调试适配器而是连接本地端口4711。")]),t._v(" "),a("li",[t._v("此时你应该已经出发了"),a("code",[t._v("launchRequest")]),t._v("中的断点。")])]),t._v(" "),a("p",[t._v("通过上面的步骤，你可以容易的修改，编译，调试mock debug并且将它改造成你想要的调试适配器。")]),t._v(" "),a("h2",{attrs:{id:"实现vs-code调试协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现vs-code调试协议"}},[t._v("#")]),t._v(" 实现VS Code调试协议")]),t._v(" "),a("p",[t._v("一个调试适配器必须实现"),a("em",[t._v("VS Code调试协议")]),t._v("。你可以在"),a("RouterLink",{attrs:{to:"/docs/extensionAPI/api-debugging.html"}},[t._v("这里")]),t._v("找到它的详细信息.")],1),t._v(" "),a("h2",{attrs:{id:"剖析调试适配器的package-json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剖析调试适配器的package-json"}},[t._v("#")]),t._v(" 剖析调试适配器的package.json")]),t._v(" "),a("p",[t._v("让我们进一步看一下VS Code插件的调试适配器属性。\n和每一个VS Code插件一样，调试适配器插件也拥有"),a("code",[t._v("package.json")]),t._v("文件来声明一些基本的属性如插件的"),a("strong",[t._v("名字")]),t._v(", "),a("strong",[t._v("发布者")]),t._v("，\n和 "),a("strong",[t._v("版本")]),t._v("。使用"),a("strong",[t._v("类别")]),t._v(" 字段去让插件更容易在VS Code插件市场被找到。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock-debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.10.18"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publisher"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vscode"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starter extension for developing debug adapters for VS Code."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"engines"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.10.x"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"categories"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Debuggers"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"label"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mock Debugger"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"enableBreakpointsFor"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"languageIds"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"markdown"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./out/mockDebug.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"configurationAttributes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"required"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"properties"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Workspace relative path to a text file."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceRoot}/readme.md"')]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boolean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Automatically stop after launch."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"initialConfigurations"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mock-Debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mock"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readme.md"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("更值得关注的是"),a("strong",[t._v("contributes")]),t._v("下的"),a("strong",[t._v("debuggers")]),t._v("节。")]),t._v(" "),a("p",[t._v("调试的"),a("strong",[t._v("type")]),t._v("下介绍了一个调试适配器。\n用户可以在启动配置中引用这个类型。\n可选属性"),a("strong",[t._v("label")]),t._v("可以在UI界面里给调试类型里显示一个更好看的名字。")]),t._v(" "),a("p",[t._v("在"),a("strong",[t._v("enableBreakpointsFor")]),t._v("属性里你可以列出可以设置断点的语言文件类型。")]),t._v(" "),a("p",[t._v("因为调试适配器是一个单独的程序，"),a("strong",[t._v("program")]),t._v("属性指定程序的路径。\n为了让插件自己包含程序，必须把程序放进插件的目录。\n按照惯例我们应该将程序放在名为"),a("code",[t._v("out")]),t._v("或者"),a("code",[t._v("bin")]),t._v("的目录咯，但是你也可以使用其他名字。")]),t._v(" "),a("p",[t._v("因为VS Code运行在不同的平台下，我们不得不确保调试适配器程序能够很好的支持不同的平台。\n基于这一点有以下的选项：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果程序实现是平台无关的，例如程序运行在可以支持全平台的运行时上，你可以通过"),a("strong",[t._v("runtime")]),t._v("属性指定有效的运行时。目前，VS Code支持'node'和'mono'运行时。我们的mock-debug就使用了这个特性。")])]),t._v(" "),a("li",[a("p",[t._v("如果调试适配器需要在不同的平台上有不同的可执行程序，"),a("strong",[t._v("program")]),t._v("属性可以被用来指定平台，像这样：")])])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gdb"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"windows"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.exe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"osx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linux"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/gdbDebug.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("而这两种方法的组合也是可能的。接下来的例子就是需要运行在OS X和Linux运行时上的mono程序的mono-debug适配器：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"debuggers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./bin/monoDebug.exe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"osx"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linux"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtime"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mono"')]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("configurationAttributes")]),t._v("属性指定了调试器在'launch.json'文件中建议和有效的值.")]),t._v(" "),a("p",[a("strong",[t._v("initialConfigurations")]),t._v("在VS Code生成'launch.json'的时候被使用。这个默认启动配置将覆盖适配器启动配置。")]),t._v(" "),a("h2",{attrs:{id:"发布你的调试适配器-publishing-your-debug-adapter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布你的调试适配器-publishing-your-debug-adapter"}},[t._v("#")]),t._v(" 发布你的调试适配器    Publishing your Debug Adapter")]),t._v(" "),a("p",[t._v("当你完成了你的调试适配器时，你可以将它发布到市场上：")]),t._v(" "),a("ul",[a("li",[t._v("更新"),a("code",[t._v("package.json")]),t._v("中的属性来体现你的调试适配器的名字和用途。")]),t._v(" "),a("li",[t._v("如这篇文章中描述的方法上传到市场"),a("RouterLink",{attrs:{to:"/docs/tools/vscecli.html"}},[t._v("共享插件")]),t._v("。")],1)]),t._v(" "),a("h2",{attrs:{id:"常见问题-common-questions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-common-questions"}},[t._v("#")]),t._v(" 常见问题    Common Questions")]),t._v(" "),a("p",[t._v("无")])])}),[],!1,null,null,null);s.default=e.exports}}]);