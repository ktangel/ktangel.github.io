(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{200:function(t,a,n){t.exports=n.p+"assets/img/nginx_1_1.2dfc564f.png"},201:function(t,a,n){t.exports=n.p+"assets/img/nginx_1_2.cbfb8247.png"},202:function(t,a,n){t.exports=n.p+"assets/img/nginx_1_3.887be1d3.png"},203:function(t,a,n){t.exports=n.p+"assets/img/nginx_1_4.b7772a8c.png"},204:function(t,a,n){t.exports=n.p+"assets/img/nginx_2_1.70e9c471.png"},214:function(t,a,n){"use strict";n.r(a);var e=n(0),r=Object(e.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" Nginx")]),t._v(" "),e("p",[t._v("整理自："),e("a",{attrs:{href:"https://www.cnblogs.com/zhouxinfei/p/7862285.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("枫飞飞"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.cnblogs.com/bluestorm/p/4574688.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("petercao"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[t._v("nginx是一款自由的、开源的、高性能的HTTP服务器和反向代理服务器；同时也是一个IMAP、POP3、SMTP代理服务器；nginx可以作为一个HTTP服务器进行网站的发布处理，另外nginx可以作为反向代理进行负载均衡的实现。")]),t._v(" "),e("p",[t._v("这里主要通过三个方面简单介绍nginx")]),t._v(" "),e("ul",[e("li",[t._v("反向代理")]),t._v(" "),e("li",[t._v("负载均衡")]),t._v(" "),e("li",[t._v("nginx特点")])]),t._v(" "),e("h3",{attrs:{id:"_1-反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 反向代理")]),t._v(" "),e("h4",{attrs:{id:"关于代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于代理")]),t._v(" "),e("p",[t._v("说到代理，首先我们要明确一个概念，所谓代理就是一个代表、一个渠道；")]),t._v(" "),e("p",[t._v("此时就设计到两个角色，一个是被代理角色，一个是目标角色，被代理角色通过这个代理访问目标角色完成一些任务的过程称为代理操作过程；如同生活中的专卖店~客人到adidas专卖店买了一双鞋，这个专卖店就是代理，被代理角色就是adidas厂家，目标角色就是用户")]),t._v(" "),e("h4",{attrs:{id:"正向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 正向代理")]),t._v(" "),e("p",[t._v("说反向代理之前，我们先看看正向代理，正向代理也是大家最常接触的到的代理模式，我们会从两个方面来说关于正向代理的处理模式，分别从软件方面和生活方面来解释一下什么叫正向代理")]),t._v(" "),e("p",[t._v("在如今的网络环境下，我们如果由于技术需要要去访问国外的某些网站，此时你会发现位于国外的某网站我们通过浏览器是没有办法访问的，此时大家可能都会用一个操作FQ进行访问，FQ的方式主要是找到一个可以访问国外网站的代理服务器，我们将请求发送给代理服务器，代理服务器去访问国外的网站，然后将访问到的数据传递给我们！")]),t._v(" "),e("p",[t._v("上述这样的代理模式称为正向代理，正向代理最大的特点是客户端非常明确要访问的服务器地址；服务器只清楚请求来自哪个代理服务器，而不清楚来自哪个具体的客户端；正向代理模式屏蔽或者隐藏了真实客户端信息。")]),t._v(" "),e("p",[e("img",{attrs:{src:n(200),alt:""}})]),t._v(" "),e("h4",{attrs:{id:"反向代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理")]),t._v(" "),e("p",[t._v("那么反向代理具体是通过什么样的方式实明白了什么是正向代理，我们继续看关于反向代理的处理方式，举例如我大天朝的某宝网站，每天同时连接到网站的访问人数已经爆表，单个服务器远远不能满足人民日益增长的购买欲望了，此时就出现了一个大家耳熟能详的名词：分布式部署；也就是通过部署多台服务器来解决访问人数限制的问题；某宝网站中大部分功能也是直接使用nginx进行反向代理实现的，并且通过封装nginx和其他的组件之后起了个高大上的名字：Tengine，有兴趣的童鞋可以访问"),e("a",{attrs:{href:"http://tengine.taobao.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tengine的官网"),e("OutboundLink")],1),t._v("查看具体的信息：现的分布式的集群操作呢，我们先看一个示意图：")]),t._v(" "),e("p",[e("img",{attrs:{src:n(201),alt:""}})]),t._v(" "),e("p",[t._v("通过上述的图解大家就可以看清楚了，多个客户端给服务器发送的请求，nginx服务器接收到之后，按照一定的规则分发给了后端的业务处理服务器进行处理了。此时~请求的来源也就是客户端是明确的，但是请求具体由哪台服务器处理的并不明确了，nginx扮演的就是一个反向代理角色")]),t._v(" "),e("p",[t._v("反向代理，主要用于服务器集群分布式部署的情况下，反向代理隐藏了服务器的信息！")]),t._v(" "),e("h4",{attrs:{id:"项目场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#项目场景","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目场景")]),t._v(" "),e("p",[t._v("通常情况下，我们在实际项目操作时，正向代理和反向代理很有可能会存在在一个应用场景中，正向代理代理客户端的请求去访问目标服务器，目标服务器是一个反向单利服务器，反向代理了多台真实的业务处理服务器。具体的拓扑图如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:n(202),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"_2-负载均衡"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-负载均衡","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.负载均衡")]),t._v(" "),e("p",[t._v("我们已经明确了所谓代理服务器的概念，那么接下来，nginx扮演了反向代理服务器的角色，它是以依据什么样的规则进行请求分发的呢？不用的项目应用场景，分发的规则是否可以控制呢？")]),t._v(" "),e("p",[t._v("这里提到的客户端发送的、nginx反向代理服务器接收到的请求数量，就是我们说的负载量")]),t._v(" "),e("p",[t._v("请求数量按照一定的规则进行分发到不同的服务器处理的规则，就是一种均衡规则")]),t._v(" "),e("p",[t._v("所以~将服务器接收到的请求按照规则分发的过程，称为负载均衡。")]),t._v(" "),e("p",[t._v("负载均衡在实际项目操作过程中，有硬件负载均衡和软件负载均衡两种，硬件负载均衡也称为硬负载，如F5负载均衡，相对造价昂贵成本较高，但是数据的稳定性安全性等等有非常好的保障，如中国移动中国联通这样的公司才会选择硬负载进行操作；更多的公司考虑到成本原因，会选择使用软件负载均衡，软件负载均衡是利用现有的技术结合主机硬件实现的一种消息队列分发机制")]),t._v(" "),e("p",[e("img",{attrs:{src:n(203),alt:""}})]),t._v(" "),e("p",[t._v("nginx支持的负载均衡调度算法方式如下：")]),t._v(" "),e("p",[t._v("weight轮询（默认）：接收到的请求按照顺序逐一分配到不同的后端服务器，即使在使用过程中，某一台后端服务器宕机，nginx会自动将该服务器剔除出队列，请求受理情况不会受到任何影响。 这种方式下，可以给不同的后端服务器设置一个权重值（weight），用于调整不同的服务器上请求的分配率；权重数据越大，被分配到请求的几率越大；该权重值，主要是针对实际工作环境中不同的后端服务器硬件配置进行调整的。")]),t._v(" "),e("p",[t._v("ip_hash：每个请求按照发起客户端的ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，这也在一定程度上解决了集群部署环境下session共享的问题。")]),t._v(" "),e("p",[t._v("fair：智能调整调度算法，动态的根据后端服务器的请求处理到响应的时间进行均衡分配，响应时间短处理效率高的服务器分配到请求的概率高，响应时间长处理效率低的服务器分配到的请求少；结合了前两者的优点的一种调度算法。但是需要注意的是nginx默认不支持fair算法，如果要使用这种调度算法，请安装upstream_fair模块")]),t._v(" "),e("p",[t._v("url_hash：按照访问的url的hash结果分配请求，每个请求的url会指向后端固定的某个服务器，可以在nginx作为静态服务器的情况下提高缓存效率。同样要注意nginx默认不支持这种调度算法，要使用的话需要安装nginx的hash软件包")]),t._v(" "),e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),e("h3",{attrs:{id:"windows安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#windows安装","aria-hidden":"true"}},[t._v("#")]),t._v(" windows安装")]),t._v(" "),e("p",[t._v("官方网站下载地址："),e("code",[t._v("https://nginx.org/en/download.html")])]),t._v(" "),e("p",[t._v("解压完成后，文件目录结构如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:n(204),alt:""}})]),t._v(" "),e("p",[t._v("打开浏览器，输入地址：http://localhost，访问页面，出现Welcome to nginx!页面表示成功；")]),t._v(" "),e("h4",{attrs:{id:"停止nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" 停止nginx")]),t._v(" "),e("p",[t._v("命令行进入nginx根目录，执行如下命令，停止服务器：")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制停止nginx服务器，如果有未处理的数据，丢弃")]),t._v("\nD:/resp_application/nginx-1.13.5"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nginx -s stop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 优雅的停止nginx服务器，如果有未处理的数据，等待处理完成之后停止")]),t._v("\nD:/resp_application/nginx-1.13.5"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" nginx -s quit\n")])])]),e("h3",{attrs:{id:"ubuntu安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu安装","aria-hidden":"true"}},[t._v("#")]),t._v(" ubuntu安装")]),t._v(" "),e("p",[t._v("按照正常软件的安装方式，直接通过如下命令进行安装：")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n")])])]),e("p",[t._v("安装完成即可，在/usr/sbin/目录下是nginx命令所在目录，在/etc/nginx/目录下是nginx所有的配置文件，用于配置nginx服务器以及负载均衡等信息")]),t._v(" "),e("h4",{attrs:{id:"查看nginx进程是否启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看nginx进程是否启动","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看nginx进程是否启动")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("$ ps -ef|grep nginx\n")])])]),e("p",[t._v("nginx会自动根据当前主机的CPU的内核数目创建对应的进程数量(当前ubuntu主机是2核4线程配置)")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[t._v("这里启动的服务进程其实是4个进程，因为nginx进程在启动的时候，会附带一个守护进程，用于保护正式进程不被异常终止；如果守护进程一旦返现nginx继承被终止了，会自动重启该进程。")]),t._v(" "),e("p",[t._v("守护进程一般会称为master进程，业务进程被称为worker进程")])]),t._v(" "),e("h4",{attrs:{id:"启动nginx服务器命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动nginx服务器命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动nginx服务器命令")]),t._v(" "),e("p",[t._v("直接执行nginx会按照默认的配置文件进行服务器的启动")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ nginx\n")])])]),e("h4",{attrs:{id:"停止nginx服务命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#停止nginx服务命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 停止nginx服务命令")]),t._v(" "),e("p",[t._v("和windows系统执行过程一样，两种停止方式")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ nginx -s stop\nor\n$ nginx -s quit\n")])])]),e("h4",{attrs:{id:"重新启动加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重新启动加载","aria-hidden":"true"}},[t._v("#")]),t._v(" 重新启动加载")]),t._v(" "),e("p",[t._v("同样也可以使用命令"),e("code",[t._v("reopen")]),t._v("和"),e("code",[t._v("reload")]),t._v("来重新启动nginx或者重新加载配合着文件。")]),t._v(" "),e("h3",{attrs:{id:"mac-os安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac-os安装","aria-hidden":"true"}},[t._v("#")]),t._v(" mac os安装")]),t._v(" "),e("p",[t._v("直接通过brew进行nginx的安装，或者下载tar.gz压缩包都是可以的。")]),t._v(" "),e("p",[t._v("直接通过brew进行安装:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("brew "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" nginx\n")])])]),e("p",[t._v("安装完成后，后续的命令操作，服务器的启动、进程查看、服务器的停止、服务器的重启已经文件加载命令都是一致的。")]),t._v(" "),e("h3",{attrs:{id:"linux安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linux安装","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux安装")]),t._v(" "),e("h4",{attrs:{id:"编译安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编译安装","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译安装")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[t._v("这个方法安装的好处是可以定制自己的模块")])]),t._v(" "),e("p",[t._v("我们编译安装nginx来定制自己的模块，机器CentOS 6.2 x86_64。首先安装缺少的依赖包：")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel")]),t._v("\n")])])]),e("p",[t._v("这些软件包如果yum上没有的话可以下载源码来编译安装，只是要注意编译时默认安装的目录，确保下面在安装nginx时能够找到这些动态库文件（ldconfig）。")]),t._v(" "),e("p",[t._v("从 "),e("a",{attrs:{href:"http://nginx.org/en/download.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/download.html"),e("OutboundLink")],1),t._v(" 下载稳定版nginx-1.6.3.tar.gz到"),e("code",[t._v("/usr/local/src")]),t._v("下解压。")]),t._v(" "),e("p",[t._v("为了后续准备我们另外下载2个插件模块：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("模板名")]),t._v(" "),e("th",[t._v("功能")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://github.com/yaoweibin/nginx_upstream_check_module/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx_upstream_check_module-0.3.0.tar.gz"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("检查后端服务器的状态")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx-goodies-nginx-sticky-module-ng-bd312d586752.tar.gz"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("（建议在/usr/local/src下解压后将目录重命名为 nginx-sticky-module-ng-1.2.5 "),e("br"),t._v("后端做负载均衡解决session sticky问题（与upstream_check模块结合使用需要另外打补丁，请参考 "),e("a",{attrs:{href:"http://seanlook.com/2015/06/02/nginx-cache-check/",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx负载均衡配置实战"),e("OutboundLink")],1),t._v("）。")])])])]),t._v(" "),e("div",{staticClass:"warning custom-block"},[e("p",[t._v("请注意插件与nginx的版本兼容问题，一般插件越新越好，nginx不用追新，稳定第一。")]),t._v(" "),e("p",[t._v("nginx-1.4.7，nginx-sticky-module-1.1，nginx_upstream_check_module-0.2.0，这个搭配也没问题。")]),t._v(" "),e("p",[t._v("sticky-1.1与nginx-1.6版本由于更新没跟上编译出错。（可以直接使用Tengine，默认就包括了这些模块）")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@cachets nginx-1.6.3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pwd")]),t._v("\n/usr/local/src/nginx-1.6.3\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@cachets nginx-1.6.3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./configure --prefix=/usr/local/nginx-1.6 --with-pcre \\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-http_stub_status_module --with-http_ssl_module \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-http_gzip_static_module --with-http_realip_module \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --add-module"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/nginx_upstream_check_module-0.3.0\n  \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@cachets nginx-1.6.3"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make && make install")]),t._v("\n")])])]),e("h3",{attrs:{id:"常用编译选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用编译选项","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用编译选项")]),t._v(" "),e("p",[t._v("nginx大部分常用模块，编译时"),e("code",[t._v("./configure --help")]),t._v("以"),e("code",[t._v("--without")]),t._v("开头的都默认安装。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("选项")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("--prefix=PATH")]),t._v(" "),e("td",[t._v("指定nginx的安装目录。默认 /usr/local/nginx")])]),t._v(" "),e("tr",[e("td",[t._v("--conf-path=PATH")]),t._v(" "),e("td",[t._v("设置nginx.conf配置文件的路径。nginx允许使用不同的配置文件启动，通过命令行中的-c选项。默认为prefix/conf/nginx.conf")])]),t._v(" "),e("tr",[e("td",[t._v("--user=name")]),t._v(" "),e("td",[t._v("设置nginx工作进程的用户。安装完成后，可以随时在nginx.conf配置文件更改user指令。默认的用户名是nobody。--group=name类似")])]),t._v(" "),e("tr",[e("td",[t._v("--with-pcre")]),t._v(" "),e("td",[t._v("设置PCRE库的源码路径，如果已通过yum方式安装，使用--with-pcre自动找到库文件。使用--with-pcre=PATH时，需要从PCRE网站下载pcre库的源码（版本4.4 – 8.30）并解压，剩下的就交给Nginx的./configure和make来完成。perl正则表达式使用在location指令和 ngx_http_rewrite_module模块中。")])]),t._v(" "),e("tr",[e("td",[t._v("--with-zlib=PATH")]),t._v(" "),e("td",[t._v("指定 zlib（版本1.1.3 – 1.2.5）的源码解压目录。在默认就启用的网络传输压缩模块ngx_http_gzip_module时需要使用zlib 。")])]),t._v(" "),e("tr",[e("td",[t._v("--with-http_ssl_module")]),t._v(" "),e("td",[t._v("使用https协议模块。默认情况下，该模块没有被构建。前提是openssl与openssl-devel已安装")])]),t._v(" "),e("tr",[e("td",[t._v("--with-http_stub_status_module")]),t._v(" "),e("td",[t._v("用来监控 Nginx 的当前状态")])]),t._v(" "),e("tr",[e("td",[t._v("--with-http_realip_module")]),t._v(" "),e("td",[t._v("通过这个模块允许我们改变客户端请求头中客户端IP地址值(例如X-Real-IP 或 X-Forwarded-For)，意义在于能够使得后台服务器记录原始客户端的IP地址")])]),t._v(" "),e("tr",[e("td",[t._v("--add-module=PATH")]),t._v(" "),e("td",[t._v("添加第三方外部模块，如nginx-sticky-module-ng或缓存模块。每次添加新的模块都要重新编译（Tengine可以在新加入module时无需重新编译）")])])])]),t._v(" "),e("h4",{attrs:{id:"参考编译方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考编译方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考编译方案:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("./configure \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --prefix"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sbin-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/sbin/nginx \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --conf-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/etc/nginx/nginx.conf \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --error-log-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/error.log \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --http-log-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/access.log \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --pid-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/run/nginx/nginx.pid \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --lock-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lock/nginx.lock \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --group"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-http_ssl_module \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-http_stub_status_module \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-http_gzip_static_module \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --http-client-body-temp-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/tmp/nginx/client/ \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --http-proxy-temp-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/tmp/nginx/proxy/ \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --http-fastcgi-temp-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/tmp/nginx/fcgi/ \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --http-uwsgi-temp-path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/tmp/nginx/uwsgi \\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-pcre"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/pcre-7.8\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --with-zlib"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/zlib-1.2.3\n")])])]),e("h3",{attrs:{id:"启动关闭nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动关闭nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" 启动关闭nginx")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 检查配置文件是否正确")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /usr/local/nginx-1.6/sbin/nginx -t")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./sbin/nginx -V # 可以看到编译选项")]),t._v("\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 启动、关闭")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./sbin/nginx # 默认配置文件 conf/nginx.conf，-c 指定")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./sbin/nginx -s stop")]),t._v("\n或 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("pkill")]),t._v(" nginx\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 重启，不会改变启动时指定的配置文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ./sbin/nginx -s reload")]),t._v("\n或 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -HUP "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /usr/local/nginx-1.6/logs/nginx.pid"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v("\n")])])]),e("h4",{attrs:{id:"作为服务启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作为服务启动","aria-hidden":"true"}},[t._v("#")]),t._v(" 作为服务启动")]),t._v(" "),e("p",[t._v("也可以将 nginx 作为系统服务管理，下载 nginx到"),e("code",[t._v("/etc/init.d/")]),t._v("，修改里面的路径然后赋予可执行权限。")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service nginx {start|stop|status|restart|reload|configtest}")]),t._v("\n")])])]),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),e("p",[t._v("nginx是一个功能非常强大的web服务器加反向代理服务器，同时又是邮件服务器等等")]),t._v(" "),e("p",[t._v("在项目使用中，使用最多的三个核心功能是反向代理、负载均衡和静态服务器")]),t._v(" "),e("p",[t._v("这三个不同的功能的使用，都跟nginx的配置密切相关，nginx服务器的配置信息主要集中在nginx.conf这个配置文件中，并且所有的可配置选项大致分为以下几个部分")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("main                                # 全局配置\n\nevents {                            # nginx工作模式配置\n\n}\nhttp {                                # http设置\n    ....\n    server {                        # 服务器主机配置\n        ....\n        location {                    # 路由配置\n            ....\n        }\n        location path {\n            ....\n        }\n        location otherpath {\n            ....\n        }\n    }\n    server {\n        ....\n        location {\n            ....\n        }\n    }\n    upstream name {                    # 负载均衡配置\n        ....\n    }\n}\n")])])]),e("p",[t._v("如上述配置文件所示，主要由6个部分组成：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#main"}},[t._v("main")]),t._v(" --- 用于进行nginx全局信息的配置")]),t._v(" "),e("li",[e("a",{attrs:{href:"#events"}},[t._v("events")]),t._v(" --- 用于nginx工作模式的配置")]),t._v(" "),e("li",[e("a",{attrs:{href:"#http"}},[t._v("http")]),t._v(" --- 用于进行http协议信息的一些配置")]),t._v(" "),e("li",[e("a",{attrs:{href:"#server"}},[t._v("server")]),t._v(" --- 用于进行服务器访问信息的配置")]),t._v(" "),e("li",[e("a",{attrs:{href:"#location"}},[t._v("location")]),t._v(" --- 用于进行访问路由的配置")]),t._v(" "),e("li",[e("a",{attrs:{href:"#upstream"}},[t._v("upstream")]),t._v(" --- 用于进行负载均衡的配置")])]),t._v(" "),e("h3",{attrs:{id:"main"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#main","aria-hidden":"true"}},[t._v("#")]),t._v(" main")]),t._v(" "),e("p",[t._v("观察下面的配置代码")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# user nobody nobody;\nworker_processes 2;\n# error_log logs/error.log\n# error_log logs/error.log notice\n# error_log logs/error.log info\n# pid logs/nginx.pid\nworker_rlimit_nofile 1024;\n")])])]),e("p",[t._v("上述配置都是存放在main全局配置模块中的配置项")]),t._v(" "),e("p",[t._v("user用来指定nginx worker进程运行用户以及用户组，默认nobody账号运行\nworker_processes指定nginx要开启的子进程数量，运行过程中监控每个进程消耗内存(一般几M~几十M不等)根据实际情况进行调整，通常数量是CPU内核数量的整数倍\nerror_log定义错误日志文件的位置及输出级别【debug / info / notice / warn / error / crit】\npid用来指定进程id的存储文件的位置\nworker_rlimit_nofile用于指定一个进程可以打开最多文件数量的描述")]),t._v(" "),e("h3",{attrs:{id:"event"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event","aria-hidden":"true"}},[t._v("#")]),t._v(" event")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("event {\n    worker_connections 1024;\n    multi_accept on;\n    use epoll;\n}\n")])])]),e("p",[t._v("上述配置是针对nginx服务器的工作模式的一些操作配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("worker_connections")]),t._v(" "),e("td",[t._v("指定最大可以同时接收的连接数量，这里一定要注意，最大连接数量是和worker processes共同决定的。")])]),t._v(" "),e("tr",[e("td",[t._v("multi_accept")]),t._v(" "),e("td",[t._v("配置指定nginx在收到一个新连接通知后尽可能多的接受更多的连接")])]),t._v(" "),e("tr",[e("td",[t._v("use epoll")]),t._v(" "),e("td",[t._v("配置指定了线程轮询的方法，如果是linux2.6+，使用epoll，如果是BSD如Mac请使用Kqueue")])])])]),t._v(" "),e("h3",{attrs:{id:"http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http","aria-hidden":"true"}},[t._v("#")]),t._v(" http")]),t._v(" "),e("p",[t._v("作为web服务器，http模块是nginx最核心的一个模块，配置项也是比较多的，项目中会设置到很多的实际业务场景，需要根据硬件信息进行适当的配置，常规情况下，使用默认配置即可！")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('http {\n    ##\n    # 基础配置\n    ##\n\n    sendfile on;\n    tcp_nopush on;\n    tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 2048;\n    # server_tokens off;\n\n    # server_names_hash_bucket_size 64;\n    # server_name_in_redirect off;\n\n    include /etc/nginx/mime.types;\n    default_type application/octet-stream;\n\n    ##\n    # SSL证书配置\n    ##\n\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n    ssl_prefer_server_ciphers on;\n\n    ##\n    # 日志配置\n    ##\n\n    access_log /var/log/nginx/access.log;\n    error_log /var/log/nginx/error.log;\n\n    ##\n    # Gzip 压缩配置\n    ##\n\n    gzip on;\n    gzip_disable "msie6";\n\n    # gzip_vary on;\n    # gzip_proxied any;\n    # gzip_comp_level 6;\n    # gzip_buffers 16 8k;\n    # gzip_http_version 1.1;\n    # gzip_types text/plain text/css application/json application/javascript\n text/xml application/xml application/xml+rss text/javascript;\n\n    ##\n    # 虚拟主机配置\n    ##\n\n    include /etc/nginx/conf.d/*.conf;\n    include /etc/nginx/sites-enabled/*;\n')])])]),e("h3",{attrs:{id:"基础配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 基础配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("sendfile on")]),t._v(" "),e("td",[t._v("配置on让sendfile发挥作用，将文件的回写过程交给数据缓冲去去完成，而不是放在应用中完成，这样的话在性能提升有有好处")])]),t._v(" "),e("tr",[e("td",[t._v("tc_nopush on")]),t._v(" "),e("td",[t._v("让nginx在一个数据包中发送所有的头文件，而不是一个一个单独发")])]),t._v(" "),e("tr",[e("td",[t._v("tcp_nodelay on")]),t._v(" "),e("td",[t._v("让nginx不要缓存数据，而是一段一段发送，如果数据的传输有实时性的要求的话可以配置它，发送完一小段数据就立刻能得到返回值，但是不要滥用哦")])]),t._v(" "),e("tr",[e("td",[t._v("keepalive_timeout 10")]),t._v(" "),e("td",[t._v("给客户端分配连接超时时间，服务器会在这个时间过后关闭连接。一般设置时间较短，可以让nginx工作持续性更好")])]),t._v(" "),e("tr",[e("td",[t._v("client_header_timeout 10")]),t._v(" "),e("td",[t._v("设置请求头的超时时间")])]),t._v(" "),e("tr",[e("td",[t._v("client_body_timeout 10")]),t._v(" "),e("td",[t._v("设置请求体的超时时间")])]),t._v(" "),e("tr",[e("td",[t._v("send_timeout 10")]),t._v(" "),e("td",[t._v("指定客户端响应超时时间，如果客户端两次操作间隔超过这个时间，服务器就会关闭这个链接")])]),t._v(" "),e("tr",[e("td",[t._v("limit_conn_zone $binary_remote_addr zone=addr:5m")]),t._v(" "),e("td",[t._v("设置用于保存各种key的共享内存的参数，")])]),t._v(" "),e("tr",[e("td",[t._v("limit_conn addr 100")]),t._v(" "),e("td",[t._v("给定的key设置最大连接数")])]),t._v(" "),e("tr",[e("td",[t._v("server_tokens")]),t._v(" "),e("td",[t._v("虽然不会让nginx执行速度更快，但是可以在错误页面关闭nginx版本提示，对于网站安全性的提升有好处哦")])]),t._v(" "),e("tr",[e("td",[t._v("include /etc/nginx/mime.types")]),t._v(" "),e("td",[t._v("指定在当前文件中包含另一个文件的指令")])]),t._v(" "),e("tr",[e("td",[t._v("default_type application/octet-stream")]),t._v(" "),e("td",[t._v("指定默认处理的文件类型可以是二进制")])]),t._v(" "),e("tr",[e("td",[t._v("type_hash_max_size 2048")]),t._v(" "),e("td",[t._v("混淆数据，影响三列冲突率，值越大消耗内存越多，散列key冲突率会降低，检索速度更快；值越小key，占用内存较少，冲突率越高，检索速度变慢")])])])]),t._v(" "),e("h3",{attrs:{id:"日志配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日志配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 日志配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("access_log logs/access.log")]),t._v(" "),e("td",[t._v("设置存储访问记录的日志")])]),t._v(" "),e("tr",[e("td",[t._v("error_log logs/error.log")]),t._v(" "),e("td",[t._v("设置存储记录错误发生的日志")])])])]),t._v(" "),e("h3",{attrs:{id:"ssl证书加密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssl证书加密","aria-hidden":"true"}},[t._v("#")]),t._v(" SSL证书加密")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("ssl_protocols")]),t._v(" "),e("td",[t._v("指令用于启动特定的加密协议，nginx在1.1.13和1.0.12版本后默认是ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2，TLSv1.1与TLSv1.2要确保OpenSSL >= 1.0.1 ，SSLv3 现在还有很多地方在用但有不少被攻击的漏洞。")])]),t._v(" "),e("tr",[e("td",[t._v("ssl prefer server ciphers")]),t._v(" "),e("td",[t._v("设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件")])])])]),t._v(" "),e("h3",{attrs:{id:"压缩配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压缩配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 压缩配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("gzip")]),t._v(" "),e("td",[t._v("是告诉nginx采用gzip压缩的形式发送数据。这将会减少我们发送的数据量。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_disable")]),t._v(" "),e("td",[t._v("为指定的客户端禁用gzip功能。我们设置成IE6或者更低版本以使我们的方案能够广泛兼容。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_static")]),t._v(" "),e("td",[t._v("告诉nginx在压缩资源之前，先查找是否有预先gzip处理过的资源。这要求你预先压缩你的文件（在这个例子中被注释掉了），从而允许你使用最高压缩比，这样nginx就不用再压缩这些文件了（想要更详尽的gzip_static的信息，请点击这里）。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_proxied")]),t._v(" "),e("td",[t._v("允许或者禁止压缩基于请求和响应的响应流。我们设置为any，意味着将会压缩所有的请求。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_min_length")]),t._v(" "),e("td",[t._v("设置对数据启用压缩的最少字节数。如果一个请求小于1000字节，我们最好不要压缩它，因为压缩这些小的数据会降低处理此请求的所有进程的速度。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_comp_level")]),t._v(" "),e("td",[t._v("设置数据的压缩等级。这个等级可以是1-9之间的任意数值，9是最慢但是压缩比最大的。我们设置为4，这是一个比较折中的设置。")])]),t._v(" "),e("tr",[e("td",[t._v("gzip_type")]),t._v(" "),e("td",[t._v("设置需要压缩的数据格式。上面例子中已经有一些了，你也可以再添加更多的格式。")])])])]),t._v(" "),e("h3",{attrs:{id:"文件缓存配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文件缓存配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 文件缓存配置")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("open_file_cache")]),t._v(" "),e("td",[t._v("打开缓存的同时也指定了缓存最大数目，以及缓存的时间。我们可以设置一个相对高的最大时间，这样我们可以在它们不活动超过20秒后清除掉。")])]),t._v(" "),e("tr",[e("td",[t._v("open_file_cache_valid")]),t._v(" "),e("td",[t._v("在open_file_cache中指定检测正确信息的间隔时间。")])]),t._v(" "),e("tr",[e("td",[t._v("open_file_cache_min_uses")]),t._v(" "),e("td",[t._v("定义了open_file_cache中指令参数不活动时间期间里最小的文件数。")])]),t._v(" "),e("tr",[e("td",[t._v("open_file_cache_errors")]),t._v(" "),e("td",[t._v("指定了当搜索一个文件时是否缓存错误信息，也包括再次给配置中添加文件。我们也包括了服务器模块，这些是在不同文件中定义的。如果你的服务器模块不在这些位置，你就得修改这一行来指定正确的位置。")])])])]),t._v(" "),e("h3",{attrs:{id:"server"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#server","aria-hidden":"true"}},[t._v("#")]),t._v(" server")]),t._v(" "),e("p",[t._v("srever模块配置是http模块中的一个子模块，用来定义一个虚拟访问主机，也就是一个虚拟服务器的配置信息")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("server {\n    listen        80;\n    server_name localhost    192.168.1.100;\n    root        /nginx/www;\n    index        index.php index.html index.html;\n    charset        utf-8;\n    access_log    logs/access.log;\n    error_log    logs/error.log;\n    ......\n}\n")])])]),e("p",[t._v("核心配置信息如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("server")]),t._v(" "),e("td",[t._v("一个虚拟主机的配置，一个http中可以配置多个server")])]),t._v(" "),e("tr",[e("td",[t._v("server_name")]),t._v(" "),e("td",[t._v("用力啊指定ip地址或者域名，多个配置之间用空格分隔")])]),t._v(" "),e("tr",[e("td",[t._v("root")]),t._v(" "),e("td",[t._v("表示整个server虚拟主机内的根目录，所有当前主机中web项目的根目录")])]),t._v(" "),e("tr",[e("td",[t._v("index")]),t._v(" "),e("td",[t._v("用户访问web网站时的全局首页")])]),t._v(" "),e("tr",[e("td",[t._v("charset")]),t._v(" "),e("td",[t._v("用于设置www/路径中配置的网页的默认编码格式")])]),t._v(" "),e("tr",[e("td",[t._v("access_log")]),t._v(" "),e("td",[t._v("用于指定该虚拟主机服务器中的访问记录日志存放路径")])]),t._v(" "),e("tr",[e("td",[t._v("error_log")]),t._v(" "),e("td",[t._v("用于指定该虚拟主机服务器中访问错误日志的存放路径")])])])]),t._v(" "),e("h3",{attrs:{id:"location"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#location","aria-hidden":"true"}},[t._v("#")]),t._v(" location")]),t._v(" "),e("p",[t._v("location模块是nginx配置中出现最多的一个配置，主要用于配置路由访问信息")]),t._v(" "),e("p",[t._v("在路由访问信息配置中关联到反向代理、负载均衡等等各项功能，所以location模块也是一个非常重要的配置模块")]),t._v(" "),e("h4",{attrs:{id:"location基本配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#location基本配置","aria-hidden":"true"}},[t._v("#")]),t._v(" location基本配置")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location / {\n    root    /nginx/www;\n    index    index.php index.html index.htm;\n}\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("location /")]),t._v(" "),e("td",[t._v("表示匹配访问根目录")])]),t._v(" "),e("tr",[e("td",[t._v("root")]),t._v(" "),e("td",[t._v("用于指定访问根目录时，访问虚拟主机的web目录")])]),t._v(" "),e("tr",[e("td",[t._v("index")]),t._v(" "),e("td",[t._v("在不指定访问具体资源时，默认展示的资源文件列表")])])])]),t._v(" "),e("h4",{attrs:{id:"反向代理配置方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反向代理配置方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 反向代理配置方式")]),t._v(" "),e("p",[t._v("通过反向代理代理服务器访问模式，通过proxy_set配置让客户端访问透明化")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location / {\n    proxy_pass http://localhost:8888;\n    proxy_set_header X-real-ip $remote_addr;\n    proxy_set_header Host $http_host;\n}\n")])])]),e("h4",{attrs:{id:"uwsgi配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uwsgi配置","aria-hidden":"true"}},[t._v("#")]),t._v(" uwsgi配置")]),t._v(" "),e("p",[t._v("wsgi模式下的服务器配置访问方式")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("location / {\n    include uwsgi_params;\n    uwsgi_pass localhost:8888\n}\n")])])]),e("h3",{attrs:{id:"upstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#upstream","aria-hidden":"true"}},[t._v("#")]),t._v(" upstream")]),t._v(" "),e("p",[t._v("upstream模块主要负责负载均衡的配置，通过默认的轮询调度方式来分发请求到后端服务器")]),t._v(" "),e("p",[t._v("简单的配置方式如下")]),t._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("upstream name {\n    ip_hash;\n    server 192.168.1.100:8000;\n    server 192.168.1.100:8001 down;\n    server 192.168.1.100:8002 max_fails=3;\n    server 192.168.1.100:8003 fail_timeout=20s;\n    server 192.168.1.100:8004 max_fails=3 fail_timeout=20s;\n}\n")])])]),e("p",[t._v("核心配置信息如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("ip_hash")]),t._v(" "),e("td",[t._v("指定请求调度算法，默认是weight权重轮询调度，可以指定")])]),t._v(" "),e("tr",[e("td",[t._v("server host:port")]),t._v(" "),e("td",[t._v("分发服务器的列表配置")])]),t._v(" "),e("tr",[e("td",[t._v("-- down")]),t._v(" "),e("td",[t._v("表示该主机暂停服务")])]),t._v(" "),e("tr",[e("td",[t._v("-- max_fails")]),t._v(" "),e("td",[t._v("表示失败最大次数，超过失败最大次数暂停服务")])]),t._v(" "),e("tr",[e("td",[t._v("-- fail_timeout")]),t._v(" "),e("td",[t._v("表示如果请求受理失败，暂停指定的时间之后重新发起请求")])])])]),t._v(" "),e("h2",{attrs:{id:"问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")])])},[],!1,null,null,null);a.default=r.exports}}]);