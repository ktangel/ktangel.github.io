(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{268:function(e,t,v){"use strict";v.r(t);var _=v(0),o=Object(_.a)({},function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"扩展（以下简称：插件）运行和调试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#扩展（以下简称：插件）运行和调试","aria-hidden":"true"}},[e._v("#")]),e._v(" 扩展（以下简称：插件）运行和调试")]),e._v(" "),v("p",[e._v("你可以使用VS Code来开发一个插件，而且VS Code也提供了几个简化开发的工具：")]),e._v(" "),v("ul",[v("li",[e._v("Yeoman 生成器 to 给插件提供脚手架")]),e._v(" "),v("li",[e._v("智能化，还有针对插件 API 的代码导航")]),e._v(" "),v("li",[e._v("编译 TypeScript（当用 TypeScript 实现的时候）")]),e._v(" "),v("li",[e._v("插件运行和调试")]),e._v(" "),v("li",[e._v("插件发布")])]),e._v(" "),v("h2",{attrs:{id:"生成一个插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生成一个插件","aria-hidden":"true"}},[e._v("#")]),e._v(" 生成一个插件")]),e._v(" "),v("p",[e._v("我们建议你通过基本文件脚手架化来开始。你可以使用"),v("code",[e._v("yo code")]),e._v(" Yeoman 生成器来做到，而且我们在"),v("router-link",{attrs:{to:"/docs/tools/yocode.html"}},[e._v("Yo Code 文档")]),e._v("中描述了细节。生成器会保证一切就绪，开发体验良好。")],1),e._v(" "),v("h2",{attrs:{id:"插件运行和调试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插件运行和调试","aria-hidden":"true"}},[e._v("#")]),e._v(" 插件运行和调试")]),e._v(" "),v("p",[e._v("你可以按下"),v("code",[e._v("F5")]),e._v("，在调试器下轻易地运行运行。这会打开一个加载好插件的 VS Code 窗口。插件输出在调试控制台。支持在调试视图或者调试控制台设置断点，单步调试，查看变量。")]),e._v(" "),v("p",[e._v("![插件调试]](images/debugging-extensions/debug.png)")]),e._v(" "),v("p",[e._v("\b我们来看看幕后将要发生什么。如果你用 Type\bScript 来写插件那么你的代码必须先编译成 JavaScript。")]),e._v(" "),v("h2",{attrs:{id:"编译-typescript"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译-typescript","aria-hidden":"true"}},[e._v("#")]),e._v(" 编译 TypeScript")]),e._v(" "),v("p",[e._v("生成好的插件内的TypeScript 编译像下面这样设置好")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("tsconfig.json")]),e._v("声明了 TypeScript 编译器的编译选项。更多请看"),v("a",{attrs:{href:"https://github.com/Microsoft/TypeScript/wiki/tsconfig.json",target:"_blank",rel:"noopener noreferrer"}},[e._v("TypeScript wiki"),v("OutboundLink")],1),e._v(" 或者在我们的"),v("router-link",{attrs:{to:"/docs/languages/typescript.html#tsconfigjson"}},[e._v("TypeScript章节")]),e._v("。")],1),e._v(" "),v("li",[e._v("合适版本的TypeScript编译器包含在 node_modules 文件夹内。")]),e._v(" "),v("li",[v("code",[e._v("typings/vscode-typings.d.ts")]),e._v(": 告诉TypeScript 编译器要包含"),v("code",[e._v("vscode")]),e._v(" API 声明。")]),e._v(" "),v("li",[e._v("API 声明 包含在 "),v("code",[e._v("node_modules/vscode")]),e._v("。")])]),e._v(" "),v("p",[e._v("在运行插件之前TypeScript 编译会被触发。\n这是通过"),v("code",[e._v(".vscode/launch.json")]),e._v("文件内的"),v("code",[e._v("preLaunchTask")]),e._v("属性（声明了一个在启动调试之前执行的任务） 。这个任务在"),v("code",[e._v(".vscode/tasks.json")]),e._v("内部定义。")]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("说明:")]),e._v(" TypeScript 编译器在监视模式触发，就能够在文件变动时重新编译。")])]),e._v(" "),v("h2",{attrs:{id:"插件启动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插件启动","aria-hidden":"true"}},[e._v("#")]),e._v(" 插件启动")]),e._v(" "),v("p",[e._v("插件在一个带有"),v("code",[e._v("Extension Development Host")]),e._v("标题的窗口内启动。该窗口运行着 VS Code，更准确的说，是带有开发模式插件的"),v("code",[e._v("Extension Host")]),e._v("。")]),e._v(" "),v("p",[e._v("可以在命令行通过"),v("code",[e._v("extensionDevelopmentPath")]),e._v("选项实现同样的效果。该选项告诉 VS Code 搜寻插件的位置，比如，")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("code --extensionDevelopmentPath=_my_extension_folder")]),e._v(".")])]),e._v(" "),v("p",[e._v("一旦"),v("code",[e._v("Extension Host")]),e._v("启动了，VS Code 就把调试器附加于其上，启动调试。")]),e._v(" "),v("p",[e._v("这是按下"),v("code",[e._v("F5")]),e._v("后发生的：")]),e._v(" "),v("ol",[v("li",[v("code",[e._v(".vscode/launch.json")]),e._v(" 告知要首次运行 "),v("code",[e._v("npm")]),e._v("命令。")]),e._v(" "),v("li",[v("code",[e._v(".vscode/tasks.json")]),e._v(" 通过脚本命令 "),v("code",[e._v("npm run compile")]),e._v("，声明了 "),v("code",[e._v("npm")]),e._v(" 任务。")]),e._v(" "),v("li",[v("code",[e._v("package.json")]),e._v(" 声明"),v("code",[e._v("compile")]),e._v("脚本， 做为 "),v("code",[e._v("node ./node_modules/vscode/bin/compile -watch -p ./")]),e._v("。")]),e._v(" "),v("li",[e._v("这会最终调用包含在 node_modules 的TypeScript 编译器, 生成了 "),v("code",[e._v("out/src/extension.js")]),e._v(" 和 "),v("code",[e._v("out/src/extension.js.map")]),e._v("。")]),e._v(" "),v("li",[e._v("一旦TypeScript 编译任务结束,"),v("code",[e._v("code --extensionDevelopmentPath=${workspaceRoot}")]),e._v(" 进程启动。")]),e._v(" "),v("li",[e._v("VS Code 的第二个实例在一个特殊窗口中启动，然后寻找一个"),v("code",[e._v("${workspaceRoot}")]),e._v("目录下的插件。")])]),e._v(" "),v("h2",{attrs:{id:"插件热加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#插件热加载","aria-hidden":"true"}},[e._v("#")]),e._v(" 插件热加载")]),e._v(" "),v("p",[e._v("因为 TypeScript 编译器在监视模式下运行，所以 TypeScript 文件会在你改动时自动编译。可以在 VS Code 左侧状态栏里观察编译进程。当编译没有错误地结束时，你必须重新加载"),v("code",[e._v("Extension Development Host")]),e._v("来确保它发现了你的改变。你可以有以下选项：")]),e._v(" "),v("ul",[v("li",[e._v("点击调试重启，重新启动插件开发主机窗口。")]),e._v(" "),v("li",[e._v("在插件开发主机窗口内按下 "),v("code",[e._v("kbstyle(Ctrl+R)")]),e._v(" (Mac: "),v("code",[e._v("kbstyle(Cmd+R)")]),e._v(")。")])]),e._v(" "),v("h2",{attrs:{id:"下一步"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#下一步","aria-hidden":"true"}},[e._v("#")]),e._v(" 下一步")]),e._v(" "),v("ul",[v("li",[v("router-link",{attrs:{to:"/docs/extensions/testing-extensions.html"}},[e._v("插件测试")]),e._v(" - 学习如何写插件的单元和集成测试。")],1),e._v(" "),v("li",[v("router-link",{attrs:{to:"/docs/tools/vscecli.html"}},[e._v("发布工具")]),e._v(" - vsce命令行工具来发布插件")],1),e._v(" "),v("li",[v("router-link",{attrs:{to:"/docs/extensionAPI/extension-manifest.html"}},[e._v("插件清单文件")]),e._v(" - VS Code 插件清单文件指南")],1),e._v(" "),v("li",[v("router-link",{attrs:{to:"/docs/extensionAPI/overview.html"}},[e._v("插件API")]),e._v(" - 了解VS Code 可扩展的 API")],1)]),e._v(" "),v("h2",{attrs:{id:"常见问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见问题","aria-hidden":"true"}},[e._v("#")]),e._v(" 常见问题")]),e._v(" "),v("p",[v("strong",[e._v("问: 我如何才能在我的插件使用VS Code 新版本中引入的 API?")])]),e._v(" "),v("p",[v("strong",[e._v("答:")]),e._v(" 如果你的插件使用VS Code 新版本中引入的 API，你就不得不在插件"),v("code",[e._v("package.json")]),e._v("文件的"),v("code",[e._v("engines")]),e._v("字段中去声明依赖。")]),e._v(" "),v("p",[e._v("步骤如下：")]),e._v(" "),v("ul",[v("li",[e._v("设置"),v("code",[e._v("package.json")]),e._v("文件内具备"),v("code",[e._v("engine")]),e._v("字段的VS Code 最小版本号。")]),e._v(" "),v("li",[e._v("保证"),v("code",[e._v("vscode")]),e._v("模块的开发依赖 >= "),v("code",[e._v("0.11.0")]),e._v("。")]),e._v(" "),v("li",[e._v("像下面这样把"),v("code",[e._v("postinstall")]),e._v("脚本加到"),v("code",[e._v("package.json")]),e._v("文件里去：")])]),e._v(" "),v("div",{staticClass:"language-json extra-class"},[v("pre",{pre:!0,attrs:{class:"language-json"}},[v("code",[v("span",{pre:!0,attrs:{class:"token property"}},[e._v('"scripts"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),v("span",{pre:!0,attrs:{class:"token property"}},[e._v('"postinstall"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v('"node ./node_modules/vscode/bin/install"')]),e._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),v("ul",[v("li",[e._v("在插件根目录下键入"),v("code",[e._v("npm install")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("vscode")]),e._v("模块会下载你声明的"),v("code",[e._v("engine")]),e._v("字段中"),v("code",[e._v("vscode.d.ts")]),e._v("的合适版本。")]),e._v(" "),v("li",[e._v("返回 VS Code，瞧一瞧你选择的特定版本 API是如何智能感知，并进行交互验证的。")])])])},[],!1,null,null,null);t.default=o.exports}}]);