(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{369:function(t,e,s){"use strict";s.r(e);var n=s(33),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"示例-hello-world-example-hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-hello-world-example-hello-world"}},[t._v("#")]),t._v(" 示例 - Hello World  Example - Hello World")]),t._v(" "),s("h2",{attrs:{id:"你的第一个插件-your-first-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你的第一个插件-your-first-extension"}},[t._v("#")]),t._v(" 你的第一个插件  Your First Extension")]),t._v(" "),s("p",[t._v('这篇文档将指引你创建你的第一个插件("Hello World")，并解释基础的VS Code扩展的概念。')]),t._v(" "),s("p",[t._v('这这篇文档的指引下，首先你将会向VS Code中添加一个显示一条"Hello World"消息的插件。稍后你会通过和VS Code编辑器交互来查询用户现在选中的文本。')]),t._v(" "),s("p",[t._v('This document will take you through creating your first VS Code extension ("Hello World") and will explain the basic VS Code extensibility concepts.')]),t._v(" "),s("p",[t._v("In this walkthrough, you'll add a new command to VS Code which will display a simple \"Hello World\" message.  Later in the walkthrough, you'll interact with the VS Code editor and query for the user's currently selected text.")]),t._v(" "),s("h2",{attrs:{id:"准备-prerequisites"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备-prerequisites"}},[t._v("#")]),t._v(" 准备  Prerequisites")]),t._v(" "),s("p",[t._v("你需要安装"),s("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("node.js"),s("OutboundLink")],1),t._v("并且确保在"),s("code",[t._v("$PATH")]),t._v("中可用。")]),t._v(" "),s("p",[t._v("You need "),s("a",{attrs:{href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("node.js"),s("OutboundLink")],1),t._v(" installed and available in your "),s("code",[t._v("$PATH")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"生成一个新的插件-generate-a-new-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成一个新的插件-generate-a-new-extension"}},[t._v("#")]),t._v(" 生成一个新的插件  Generate a New Extension")]),t._v(" "),s("p",[t._v("要想给你的VS Code添加功能，最简单的方法是添加一条命令。每条命令都会注册一个可以通过命令面板或者键盘快捷键调用的回调函数。")]),t._v(" "),s("p",[t._v("我们编写了一个Yeoman生成器来帮助你开始第一步。安装Yeoman和"),s("RouterLink",{attrs:{to:"/docs/tools/yocode.html"}},[t._v("Yeoman VS Code插件生成器")]),t._v("来生成一个新的插件开发框架。")],1),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g yo generator-code\nyo code\n")])])]),s("p",[t._v("对于hello world插件，你可以选择创建一个"),s("strong",[t._v("TypeScript")]),t._v("插件或者"),s("strong",[t._v("JavaScript")]),t._v("插件，在这个例子中，我们选择"),s("strong",[t._v("TypeScript")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/generator.png",alt:"The command generator"}})]),t._v(" "),s("p",[t._v("The simplest way to add your own functionality to VS Code is through adding a command. A command registers a callback function which can be invoked from the Command Palette or with a key binding.")]),t._v(" "),s("p",[t._v("We have written a Yeoman generator to help get you started. Install Yeoman and the "),s("RouterLink",{attrs:{to:"/docs/tools/yocode.html"}},[t._v("Yeoman VS Code Extension generator")]),t._v(" and scaffold a new extension:")],1),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g yo generator-code\nyo code\n")])])]),s("p",[t._v("For the hello world extension, you can either create a "),s("strong",[t._v("TypeScript")]),t._v(" extension or a "),s("strong",[t._v("JavaScript")]),t._v(" one. For this example, we pick a "),s("strong",[t._v("TypeScript")]),t._v(" extension.")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/generator.png",alt:"The command generator"}})]),t._v(" "),s("h2",{attrs:{id:"运行你的插件-running-your-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行你的插件-running-your-extension"}},[t._v("#")]),t._v(" 运行你的插件  Running your Extension")]),t._v(" "),s("ul",[s("li",[t._v("运行VS Code，选择 "),s("code",[t._v("文件")]),t._v(" > "),s("code",[t._v("打开…")]),t._v(" 然后选择你刚才生成的文件夹。")]),t._v(" "),s("li",[t._v("按下 "),s("code",[t._v("kb(workbench.action.debug.start)")]),t._v(" 或者点击 "),s("code",[t._v("调试")]),t._v(" 图标然后点击 "),s("code",[t._v("开始")]),t._v("。")]),t._v(" "),s("li",[t._v("一个新的VS Code实例将以一种特殊的模式("),s("code",[t._v("Extension Development Host")]),t._v(")启动，"),s("strong",[t._v("这个新的实例是可以使用你的插件的")]),t._v("。")]),t._v(" "),s("li",[t._v("按下 "),s("code",[t._v("kb(workbench.action.showCommands)")]),t._v(" 然后运行名为"),s("code",[t._v("Hello World")]),t._v("的命令。")]),t._v(" "),s("li",[t._v("恭喜！至此你已经创建并且执行了你的第一个VS Code命令！")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/running.png",alt:"带着插件运行VS Code"}})]),t._v(" "),s("ul",[s("li",[t._v("Launch VS Code, choose "),s("code",[t._v("File")]),t._v(" > "),s("code",[t._v("Open Folder")]),t._v(" and pick the folder that you generated.")]),t._v(" "),s("li",[t._v("Press "),s("code",[t._v("kb(workbench.action.debug.start)")]),t._v(" or click on the "),s("code",[t._v("Debug")]),t._v(" icon and click "),s("code",[t._v("Start")]),t._v(".")]),t._v(" "),s("li",[t._v("A new instance of VS Code will start in a special mode ("),s("code",[t._v("Extension Development Host")]),t._v(") and "),s("strong",[t._v("this new instance is now aware of your extension")]),t._v(".")]),t._v(" "),s("li",[t._v("Press "),s("code",[t._v("kb(workbench.action.showCommands)")]),t._v(" and run the command named "),s("code",[t._v("Hello World")]),t._v(".")]),t._v(" "),s("li",[t._v("Congratulations! You've just created and executed your first VS Code command!")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/running.png",alt:"Running VS Code with an extension"}})]),t._v(" "),s("h2",{attrs:{id:"插件结构-the-structure-of-an-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件结构-the-structure-of-an-extension"}},[t._v("#")]),t._v(" 插件结构  The Structure of an Extension")]),t._v(" "),s("p",[t._v("在运行过后，生成的插件应该有如下的结构：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── .gitignore\n├── .vscode                     // VS Code 集成配置\n│   ├── launch.json\n│   ├── settings.json\n│   └── tasks.json\n├── .vscodeignore\n├── README.md\n├── src                         // 源码\n│   └── extension.ts\t\t\t// 如果是JavaScript插件，那么此处就是extension.js\n├── test                        // 测试文件夹\n│   ├── extension.test.ts\t   // 如果是JavaScript插件，那么此处就是extension.test.js\n│   └── index.ts\t            // 如果是JavaScript插件，那么此处就是index.js\n├── node_modules\n│   ├── vscode                  // 语言服务\n│   └── typescript              // typescript编译器(仅TypeScript插件才有)\n├── out                         // 编译结果(仅TypeScript插件才有)\n│   ├── src\n│   |   ├── extension.js\n│   |   └── extension.js.map\n│   └── test\n│       ├── extension.test.js\n│       ├── extension.test.js.map\n│       ├── index.js\n│       └── index.js.map\n├── package.json                // 插件的清单\n├── tsconfig.json               // 如果是JavaScript插件，那么此处就是jsconfig.json\n├── typings                     // 类型定义文件\n│   ├── node.d.ts               // 链接到Node.js的API\n│   └── vscode-typings.d.ts     // 链接到VS Code的API\n└── vsc-extension-quickstart.md // 插件开发快速入门文档\n")])])]),s("p",[t._v("接下来让我们深入了解所有这些文件的作用和用途：")]),t._v(" "),s("p",[t._v("After running, the generated extension should have the following structure:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v(".\n├── .gitignore\n├── .vscode                     // VS Code integration\n│   ├── launch.json\n│   ├── settings.json\n│   └── tasks.json\n├── .vscodeignore\n├── README.md\n├── src                         // sources\n│   └── extension.ts\t\t\t// extension.js, in case of JavaScript extension\n├── test                        // tests folder\n│   ├── extension.test.ts\t   // extension.test.js, in case of JavaScript extension\n│   └── index.ts\t            // index.js, in case of JavaScript extension\n├── node_modules\n│   ├── vscode                  // language services\n│   └── typescript              // compiler for typescript (TypeScript only)\n├── out                         // compilation output (TypeScript only)\n│   ├── src\n│   |   ├── extension.js\n│   |   └── extension.js.map\n│   └── test\n│       ├── extension.test.js\n│       ├── extension.test.js.map\n│       ├── index.js\n│       └── index.js.map\n├── package.json                // extension's manifest\n├── tsconfig.json               // jsconfig.json, in case of JavaScript extension\n├── typings                     // type definition files\n│   ├── node.d.ts               // link to Node.js APIs\n│   └── vscode-typings.d.ts     // link to VS Code APIs\n└── vsc-extension-quickstart.md // extension development quick start\n")])])]),s("p",[t._v("Let's go through the purpose of all these files and explain what they do:")]),t._v(" "),s("h3",{attrs:{id:"插件清单：package-json-the-extension-manifest-package-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件清单：package-json-the-extension-manifest-package-json"}},[t._v("#")]),t._v(" 插件清单："),s("code",[t._v("package.json")]),t._v("  The extension manifest: "),s("code",[t._v("package.json")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("请阅读"),s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-manifest.html"}},[s("code",[t._v("package.json")]),t._v("插件清单参考")])],1)]),t._v(" "),s("li",[s("p",[t._v("更多的信息请看这篇文档"),s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-points.html"}},[s("code",[t._v("package.json")]),t._v("扩展项")])],1)]),t._v(" "),s("li",[s("p",[t._v("任何一个VS Code插件都必须有一个用来描述插件和插件功能的"),s("code",[t._v("package.json")]),t._v("文件。")])]),t._v(" "),s("li",[s("p",[t._v("VS Code在启动的时候读取这个文件，此时所有定义在"),s("code",[t._v("contributes")]),t._v("节的内容将会生效 。")])]),t._v(" "),s("li",[s("p",[t._v("Please read the "),s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-manifest.html"}},[s("code",[t._v("package.json")]),t._v(" extension manifest reference")])],1)]),t._v(" "),s("li",[s("p",[t._v("More information on "),s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-points.html"}},[s("code",[t._v("package.json")]),t._v(" contribution points")])],1)]),t._v(" "),s("li",[s("p",[t._v("Each VS Code extension must have a "),s("code",[t._v("package.json")]),t._v(" file that describes it and its capabilities.")])]),t._v(" "),s("li",[s("p",[t._v("VS Code reads this file during start-up and reacts to each "),s("code",[t._v("contributes")]),t._v(" section immediately.")])])]),t._v(" "),s("h4",{attrs:{id:"typescript插件清单示例-example-typescript-extension-manifest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#typescript插件清单示例-example-typescript-extension-manifest"}},[t._v("#")]),t._v(" TypeScript插件清单示例  Example TypeScript extension manifest")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myFirstExtension"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publisher"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"engines"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^0.10.1"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"categories"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Other"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"activationEvents"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onCommand:extension.sayHello"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./out/src/extension"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commands"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"command"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extension.sayHello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode:prepublish"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/compile"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/compile -watch -p ./"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.7.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^0.11.x"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("注意：")]),t._v(" JavaScript插件不需要"),s("code",[t._v("scripts")]),t._v("成员，因为JavaScript插件不需要编译。")])]),t._v(" "),s("ul",[s("li",[t._v("这个package.json文件描述了一个如下属性的插件:")]),t._v(" "),s("li",[s("em",[t._v("扩展")]),t._v("了一条显示标签为"),s("code",[t._v('"Hello world"')]),t._v("，实际调用"),s("code",[t._v('"extension.sayHello"')]),t._v("命令的命令面板条目。")]),t._v(" "),s("li",[t._v("请求VS Code在"),s("code",[t._v('"extension.sayHello"')]),t._v("命令被调用时加载("),s("em",[t._v("activationEvents")]),t._v(")。")]),t._v(" "),s("li",[s("em",[t._v("主要")]),t._v("的JavaScript代码在"),s("code",[t._v('"./out/src/extension.js"')]),t._v("文件中。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意："),s("strong",[t._v("VS Code")]),t._v("不会")]),t._v("在启动的时候就加载插件的代码。一个插件必须在"),s("RouterLink",{attrs:{to:"/docs/extensionAPI/activation-events.html"}},[s("code",[t._v("activationEvents")])]),t._v("属性中描述什么条件下应该被激活（加载）。")],1)]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myFirstExtension"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"description"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"publisher"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"engines"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^0.10.1"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"categories"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Other"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"activationEvents"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"onCommand:extension.sayHello"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"main"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./out/src/extension"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contributes"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commands"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"command"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extension.sayHello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode:prepublish"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/compile"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"compile"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/compile -watch -p ./"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"devDependencies"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"typescript"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^1.7.5"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"vscode"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^0.11.x"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" A JavaScript extension doesn't require the "),s("code",[t._v("scripts")]),t._v(" field as no compilation is needed.")])]),t._v(" "),s("ul",[s("li",[t._v("This specific package.json describes an extension that:")]),t._v(" "),s("li",[s("em",[t._v("contributes")]),t._v(" an entry to the Command Palette ("),s("code",[t._v("kb(workbench.action.showCommands)")]),t._v(") with the label "),s("code",[t._v('"Hello world"')]),t._v(" that will invoke a command "),s("code",[t._v('"extension.sayHello"')]),t._v(".")]),t._v(" "),s("li",[t._v("requests to get loaded ("),s("em",[t._v("activationEvents")]),t._v(") when the command "),s("code",[t._v('"extension.sayHello"')]),t._v(" is invoked.")]),t._v(" "),s("li",[t._v("has its "),s("em",[t._v("main")]),t._v(" JavaScript code in a file called "),s("code",[t._v('"./out/src/extension.js"')]),t._v(".")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" VS Code "),s("strong",[t._v("does not")]),t._v(" load the code of an extension eagerly at start-up. An extension must describe, through the "),s("RouterLink",{attrs:{to:"/docs/extensionAPI/activation-events.html"}},[s("code",[t._v("activationEvents")])]),t._v(" property under what conditions it should get activated (loaded).")],1)]),t._v(" "),s("h3",{attrs:{id:"生成代码-generated-code"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成代码-generated-code"}},[t._v("#")]),t._v(" 生成代码  Generated Code")]),t._v(" "),s("p",[t._v("生成的插件代码在"),s("code",[t._v("extension.ts")]),t._v("(如果是JavaScript插件就是"),s("code",[t._v("extension.js")]),t._v(")文件中:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'vscode'模块包含了VS Code插件API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导入模块并且在下面你的代码中用vscode的别名引用这个模块")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" vscode "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vscode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个函数将在你的插件被激活时被调用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 你的插件在第一次被执行命令的时候被激活")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExtensionContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用控制台去输出诊断信息(console.log)和错误信息(console.error)")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有当你的插件被激活时才会执行下面这行代码")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Congratulations, your extension \"my-first-extension\" is now active!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这条命令被定义在package.json文件里")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在使用registerCommand来提供这条命令的实现")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commandId参数必须和package.json文件中的command成员匹配")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" disposable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'extension.sayHello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每次命令被执行的时候都将执行你这里的代码")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向用户显示一个消息提示框")]),t._v("\n\t\tvscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInformationMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tcontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscriptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disposable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("每个插件都应该从他们的主文件中导出一个名为"),s("code",[t._v("activate()")]),t._v("函数，当在"),s("code",[t._v("package.json")]),t._v("文件中描述的"),s("code",[t._v("activationEvents")]),t._v("中的任何事件发生时，VS Code仅调用"),s("strong",[t._v("一次")]),t._v("这个函数。")]),t._v(" "),s("li",[t._v("如果一个插件使用了操作系统的资源（例如分裂出一个进程），那么插件可以在主文件中导出一个名为"),s("code",[t._v("deactivate()")]),t._v("的函数，VS Code在关闭的时候将会调用这个函数来清理工作资源。")]),t._v(" "),s("li",[t._v("这个插件导入了"),s("code",[t._v("vscode")]),t._v('API，注册了一个可以在VS Code里显示"Hello world"的命令，并且将函数的调用和'),s("code",[t._v('"extension.sayHello"')]),t._v("命令的调用联系起来。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意：")]),s("code",[t._v("package.json")]),t._v("文件中的"),s("code",[t._v("contributes")]),t._v("节向命令面板里添加了一个条目。extension.ts/.js里的代码定义了"),s("code",[t._v('"extension.sayHello"')]),t._v("命令的具体实现。")])]),t._v(" "),s("blockquote",[s("p",[t._v("**注意：**对于TypeScript插件而言，生成的"),s("code",[t._v("out/src/extension.js")]),t._v("文件将被VS Code在运行时加载并执行。")])]),t._v(" "),s("p",[t._v("The generated extension's code is in "),s("code",[t._v("extension.ts")]),t._v(" (or "),s("code",[t._v("extension.js")]),t._v(" in case of a JavaScript extension):")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The module 'vscode' contains the VS Code extensibility API")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Import the module and reference it with the alias vscode in your code below")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" vscode "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vscode'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this method is called when your extension is activated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// your extension is activated the very first time the command is executed")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("activate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ExtensionContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Use the console to output diagnostic information (console.log) and errors (console.error)")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This line of code will only be executed once when your extension is activated")]),t._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Congratulations, your extension \"my-first-extension\" is now active!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The command has been defined in the package.json file")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now provide the implementation of the command with  registerCommand")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The commandId parameter must match the command field in package.json")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" disposable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerCommand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'extension.sayHello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The code you place here will be executed every time your command is executed")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Display a message box to the user")]),t._v("\n\t\tvscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInformationMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World!'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\tcontext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subscriptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disposable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Each extension should export from its main file a function named "),s("code",[t._v("activate()")]),t._v(", which VS Code will invoke "),s("strong",[t._v("only once")]),t._v(" when any of the "),s("code",[t._v("activationEvents")]),t._v(" described in the "),s("code",[t._v("package.json")]),t._v(" file occur.")]),t._v(" "),s("li",[t._v("If an extension makes use of OS resources (e.g. spawns processes), the extension can export from its main file a function named "),s("code",[t._v("deactivate()")]),t._v(" where it can do clean-up work and VS Code will invoke that function on shutdown.")]),t._v(" "),s("li",[t._v("This specific extension imports the "),s("code",[t._v("vscode")]),t._v(" API and then registers a command, associating a function to be called when the command "),s("code",[t._v('"extension.sayHello"')]),t._v(' gets invoked. The command\'s implementation displays a "Hello world" message in VS Code.')])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" The "),s("code",[t._v("contributes")]),t._v(" section of the "),s("code",[t._v("package.json")]),t._v(" adds an entry to the Command Palette.  The code in extension.ts/.js defines the implementation of "),s("code",[t._v('"extension.sayHello"')]),t._v(".")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" For TypeScript extensions, the generated file "),s("code",[t._v("out/src/extension.js")]),t._v(" will be loaded at runtime and executed by VS Code.")])]),t._v(" "),s("h3",{attrs:{id:"其他文件-miscellaneous-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他文件-miscellaneous-files"}},[t._v("#")]),t._v(" 其他文件  Miscellaneous files")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v(".vscode/launch.json")]),t._v("定义了插件开发模式下去启动VS Code的行为。 他也通过"),s("code",[t._v("preLaunchTask")]),t._v("来指定定义在"),s("code",[t._v(".vscode/tasks.json")]),t._v("文件中的用来运行TypeScript编译器的任务。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".vscode/settings.json")]),t._v("插件默认设置不包含"),s("code",[t._v("out")]),t._v("文件夹。你可以在其中设置你想隐藏的文件类型。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".gitignore")]),t._v(" - 告诉Git版本控制系统哪些类型文件可以忽略。")])]),t._v(" "),s("li",[s("p",[s("RouterLink",{attrs:{to:"/docs/tools/vscecli.html#advanced-usage"}},[s("code",[t._v(".vscodeignore")])]),t._v(" - 告诉打包工具档发布插件的时候哪些文件可以忽略。")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("README.md")]),t._v(" - README文件向VS Code的用户描述了你的插件。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("vsc-extension-quickstart.md")]),t._v(" - 一份快速入门文档。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("test/extension.test.ts")]),t._v(" - 你可以将插件的单元测试写在这个文件里，并且运行测试用例(具体信息可以阅读这里"),s("RouterLink",{attrs:{to:"/docs/extensions/testing-extensions.html"}},[t._v("Testing Your Extension")]),t._v(")")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v(".vscode/launch.json")]),t._v(" defines launching VS Code in the Extension Development mode. It also points with "),s("code",[t._v("preLaunchTask")]),t._v(" to a task defined in "),s("code",[t._v(".vscode/tasks.json")]),t._v(" that runs the TypeScript compiler.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".vscode/settings.json")]),t._v(" by default excludes the "),s("code",[t._v("out")]),t._v(" folder.  You can modify which file types you want to hide.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v(".gitignore")]),t._v(" - Tells Git version control which patterns to ignore.")])]),t._v(" "),s("li",[s("p",[s("RouterLink",{attrs:{to:"/docs/tools/vscecli.html#advanced-usage"}},[s("code",[t._v(".vscodeignore")])]),t._v(" - Tells the packaging tool which files to ignore when publishing the extension.")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("README.md")]),t._v(" - README file describing your extension for VS Code users.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("vsc-extension-quickstart.md")]),t._v(" - A Quick Start guide for you.")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("test/extension.test.ts")]),t._v(" - you can put your extension unit tests in here and run your tests against the VS Code API (see "),s("RouterLink",{attrs:{to:"/docs/extensions/testing-extensions.html"}},[t._v("Testing Your Extension")]),t._v(")")],1)])]),t._v(" "),s("h2",{attrs:{id:"插件激活-extension-activation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件激活-extension-activation"}},[t._v("#")]),t._v(" 插件激活  Extension Activation")]),t._v(" "),s("p",[t._v("现在已经将插件中各个文件的作用讲清楚了，接下来讲一下插件激活的过程：")]),t._v(" "),s("ul",[s("li",[t._v("VS Code插件开发实例发现插件然后读取插件的"),s("code",[t._v("package.json")]),t._v("文件。")]),t._v(" "),s("li",[t._v("然后当你按下"),s("code",[t._v("kb(workbench.action.showCommands)")]),t._v("时：")]),t._v(" "),s("li",[t._v("注册的命令被现实在命令面板里。")]),t._v(" "),s("li",[t._v("在出现的命令列表中有一个我们在"),s("code",[t._v("package.json")]),t._v("文件中定义的"),s("code",[t._v('"Hello world"')]),t._v("条目。")]),t._v(" "),s("li",[t._v("当我们选择了"),s("code",[t._v('"Hello world"')]),t._v("条目时:")]),t._v(" "),s("li",[s("code",[t._v('"extension.sayHello"')]),t._v("命令被调用:\n"),s("ul",[s("li",[t._v("一个"),s("code",[t._v('"onCommand:extension.sayHello"')]),t._v("激活事件被创建了出来。")]),t._v(" "),s("li",[t._v("所有在"),s("code",[t._v("activationEvents")]),t._v("成员中监听这个激活事件的插件将被激活。\n"),s("ul",[s("li",[s("code",[t._v("./out/src/extension.js")]),t._v("文件被JavaScript虚拟机加载。")]),t._v(" "),s("li",[t._v("VS Code寻找其中的的导出函数"),s("code",[t._v("activate")]),t._v("并且调用它。")]),t._v(" "),s("li",[s("code",[t._v('"extension.sayHello"')]),t._v("命令被注册并且定义了这条命令的具体实现。")])])])])]),t._v(" "),s("li",[s("code",[t._v('"extension.sayHello"')]),t._v("命令的实现函数被调用。")]),t._v(" "),s("li",[t._v('这条命令的具体实现显示一条"Hello World"消息。')])]),t._v(" "),s("p",[t._v("Now that the roles of the files included in the extension are clarified, here is how your extension gets activated:")]),t._v(" "),s("ul",[s("li",[t._v("The extension development instance discovers the extension and reads its "),s("code",[t._v("package.json")]),t._v(" file.")]),t._v(" "),s("li",[t._v("Later when you press "),s("code",[t._v("kb(workbench.action.showCommands)")]),t._v(":")]),t._v(" "),s("li",[t._v("The registered commands are displayed in the Command Palette.")]),t._v(" "),s("li",[t._v("In this list there is now an entry "),s("code",[t._v('"Hello world"')]),t._v(" that is defined in the "),s("code",[t._v("package.json")]),t._v(".")]),t._v(" "),s("li",[t._v("When selecting the "),s("code",[t._v('"Hello world"')]),t._v(" command:")]),t._v(" "),s("li",[t._v("The command "),s("code",[t._v('"extension.sayHello"')]),t._v(" is invoked:\n"),s("ul",[s("li",[t._v("An activation event "),s("code",[t._v('"onCommand:extension.sayHello"')]),t._v(" is created.")]),t._v(" "),s("li",[t._v("All extensions listing this activation event in their "),s("code",[t._v("activationEvents")]),t._v(" are activated.\n"),s("ul",[s("li",[t._v("The file at "),s("code",[t._v("./out/src/extension.js")]),t._v(" gets loaded in the JavaScript VM.")]),t._v(" "),s("li",[t._v("VS Code looks for an exported function "),s("code",[t._v("activate")]),t._v(" and calls it.")]),t._v(" "),s("li",[t._v("The command "),s("code",[t._v('"extension.sayHello"')]),t._v(" is registered and its implementation is now defined.")])])])])]),t._v(" "),s("li",[t._v("The command "),s("code",[t._v('"extension.sayHello"')]),t._v(" implementation function is invoked.")]),t._v(" "),s("li",[t._v('The command implementation displays the "Hello World" message.')])]),t._v(" "),s("h2",{attrs:{id:"调试你的插件-debugging-your-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试你的插件-debugging-your-extension"}},[t._v("#")]),t._v(" 调试你的插件  Debugging your Extension")]),t._v(" "),s("p",[t._v("Simply set a breakpoint, for example inside the registered command and run the "),s("code",[t._v('"Hello world"')]),t._v(" command in the Extension Development VS Code instance.")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/hitbp.png",alt:"调试插件"}})]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("注意：")]),t._v(" 对于TypeScript插件来说,VS Code加载和运行的依然是"),s("code",[t._v("out/src/extension.js")]),t._v("文件，如果你真的需要调试原生的TypeScript代码，你应该生成一个源代码映射文件"),s("code",[t._v("out/src/extension.js.map")]),t._v("，VS Code的调试器支持这种源代码映射。")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("小贴士")]),t._v(" 调试控制台将显示所有你向控制台输出的信息。")])]),t._v(" "),s("p",[t._v("想了解更详细的关于调试的信息请阅读这篇文档"),s("RouterLink",{attrs:{to:"/docs/extensions/debugging-extensions.html"}},[t._v("开发环境")]),t._v(".")],1),t._v(" "),s("p",[t._v("Simply set a breakpoint, for example inside the registered command and run the "),s("code",[t._v('"Hello world"')]),t._v(" command in the Extension Development VS Code instance.")]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/hitbp.png",alt:"Debugging the extension"}})]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Note:")]),t._v(" For TypeScript extensions, even though VS Code loads and executes "),s("code",[t._v("out/src/extension.js")]),t._v(", you are actually able to debug the original TypeScript code due to the generated source map "),s("code",[t._v("out/src/extension.js.map")]),t._v(" and VS Code's debugger support for source maps.")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("Tip:")]),t._v(" The Debug Console will show all the messages you log to the console.")])]),t._v(" "),s("p",[t._v("To learn more about the extension "),s("RouterLink",{attrs:{to:"/docs/extensions/debugging-extensions.html"}},[t._v("development environment")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"简单的修改-a-simple-change"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单的修改-a-simple-change"}},[t._v("#")]),t._v(" 简单的修改  A Simple Change")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("extension.ts")]),t._v("(如果是JavaScript插件，那么此处就是extension.js)文件里，试着把"),s("code",[t._v("extension.sayHello")]),t._v("命令的实现修改为显示编辑器中选中的字符数：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" editor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activeTextEditor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有打开的文件")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向用户显示一个消息框")]),t._v("\nvscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInformationMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Selected characters: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("小贴士：")]),t._v(" 一旦你修改了插件的源代码，你需要重新启动VS Code插件开发实例。你可以在VS Code开发实例里按下"),s("code",[t._v("kbstyle(Ctrl+R)")]),t._v(" (Mac: "),s("code",[t._v("kbstyle(Cmd+R)")]),t._v(")或者点击主VS Code实例上方的重新启动按钮来重新启动VS Code插件开发实例。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/selection-length.png",alt:"Running the modified extension"}})]),t._v(" "),s("p",[t._v("In "),s("code",[t._v("extension.ts")]),t._v(" (or "),s("code",[t._v("extension.js")]),t._v(", in a JavaScript extension), try replacing the "),s("code",[t._v("extension.sayHello")]),t._v(" command implementation to show the number of characters selected in the editor:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" editor "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("activeTextEditor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// No open text editor")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" selection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" editor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Display a message box to the user")]),t._v("\nvscode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInformationMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Selected characters: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[s("strong",[t._v("Tip:")]),t._v(" Once you make changes to the extension source code, you need to restart the Extension Development instance of VS Code. You can do that by using "),s("code",[t._v("kbstyle(Ctrl+R)")]),t._v(" (Mac: "),s("code",[t._v("kbstyle(Cmd+R)")]),t._v(") in the second instance or by clicking the Restart button at the top of your primary VS Code instance.")])]),t._v(" "),s("p",[s("img",{attrs:{src:"images/example-hello-world/selection-length.png",alt:"Running the modified extension"}})]),t._v(" "),s("h2",{attrs:{id:"在本地安装你的插件-installing-your-extension-locally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在本地安装你的插件-installing-your-extension-locally"}},[t._v("#")]),t._v(" 在本地安装你的插件  Installing your Extension Locally")]),t._v(" "),s("p",[t._v("到此为止，你写的插件还是仅仅运行在VS Code插件开发实例这个特殊的实例里，如果想在所有的VS Code实例里运行你的插件你需要将你的插件复制到你的本地插件目录下的一个新的文件夹：")]),t._v(" "),s("ul",[s("li",[t._v("Windows: "),s("code",[t._v("%USERPROFILE%\\.vscode\\extensions")])]),t._v(" "),s("li",[t._v("Mac/Linux: "),s("code",[t._v("$HOME/.vscode/extensions")])])]),t._v(" "),s("p",[t._v("So far, the extension you have written only runs in a special instance of VS Code, the Extension Development instance. To get your extension running in all instances of VS Code, you need to copy it to a new folder under your local extensions folder:")]),t._v(" "),s("ul",[s("li",[t._v("Windows: "),s("code",[t._v("%USERPROFILE%\\.vscode\\extensions")])]),t._v(" "),s("li",[t._v("Mac/Linux: "),s("code",[t._v("$HOME/.vscode/extensions")])])]),t._v(" "),s("h2",{attrs:{id:"发布你的插件-ublishing-your-extension"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布你的插件-ublishing-your-extension"}},[t._v("#")]),t._v(" 发布你的插件  ublishing your Extension")]),t._v(" "),s("p",[t._v("阅读怎样"),s("RouterLink",{attrs:{to:"/docs/tools/vscecli.html"}},[t._v("共享插件")]),t._v("。")],1),t._v(" "),s("p",[t._v("Read about how to "),s("RouterLink",{attrs:{to:"/docs/tools/vscecli.html"}},[t._v("Share an Extension")]),t._v(".")],1),t._v(" "),s("h2",{attrs:{id:"下一步-next-steps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下一步-next-steps"}},[t._v("#")]),t._v(" 下一步  Next Steps")]),t._v(" "),s("p",[t._v("在这篇教程中，我们学习了一个非常简单的插件。这里有个更复杂的示例"),s("RouterLink",{attrs:{to:"/docs/extensions/example-word-count.html"}},[t._v("单词数统计示例")]),t._v("展示了如何针对某一种特定的语言（Markdown）以及监听编辑器的内容修改事件 。")],1),t._v(" "),s("p",[t._v("如果你想了解更多的插件API的信息，可以试试阅读以下文档：")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/overview.html"}},[t._v("插件API概述")]),t._v(" - 学习全面的VS Code插件扩展设计。")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensions/patterns-and-principles.html"}},[t._v("API模式和原理")]),t._v(" - VS Code的扩展性是基于一些规范和原理的。")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-points.html"}},[t._v("扩展项")]),t._v(" - 详细的描述VS Code的各种扩展项。")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/activation-events.html"}},[t._v("激活事件")]),t._v(" - VS Code的激活事件参考说明。")],1)]),t._v(" "),s("p",[t._v("In this walkthrough, we've seen a very simple extension. For a more detailed example, see the "),s("RouterLink",{attrs:{to:"/docs/extensions/example-word-count.html"}},[t._v("Word Count Example")]),t._v(" which shows how to target a specific language (Markdown) and listen to the editor's document changed events.")],1),t._v(" "),s("p",[t._v("If you'd like to read more generally about the extension APIs, try these topics:")]),t._v(" "),s("ul",[s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/overview.html"}},[t._v("Extension API Overview")]),t._v(" - Learn about the full VS Code extensibility model.")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensions/patterns-and-principles.html"}},[t._v("API Patterns and Principles")]),t._v(" - VS Code extensibility is based on several guiding patterns and principles.")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-points.html"}},[t._v("Contribution Points")]),t._v(" - Details about the various VS Code contribution points.")],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/docs/extensionAPI/activation-events.html"}},[t._v("Activation Events")]),t._v(" - VS Code activation events reference")],1)]),t._v(" "),s("h2",{attrs:{id:"常见问题-common-questions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-common-questions"}},[t._v("#")]),t._v(" 常见问题  Common Questions")]),t._v(" "),s("p",[t._v("无")]),t._v(" "),s("p",[t._v("Nothing yet")])])}),[],!1,null,null,null);e.default=a.exports}}]);