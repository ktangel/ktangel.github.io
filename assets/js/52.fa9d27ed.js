(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{368:function(t,s,e){"use strict";e.r(s);var a=e(33),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"扩展（以下简称插件）测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扩展（以下简称插件）测试"}},[t._v("#")]),t._v(" 扩展（以下简称插件）测试")]),t._v(" "),e("p",[t._v("VS Code支持符合 VS Code API 的插件测试\b的运行和调试。这些测试会在 VS Code内部一个特殊实例内运行，"),e("code",[t._v("Extension Development Host")]),t._v("有全套 API的权限。我们把这些测试看做集成测试，因为他们有别于可以可以运行在一个 VS Code 单独窗口\b的单元测试。本篇文档有关 VS Code 集成测试。对于但与测试，你可以使用任何时髦的测试框架，比如"),e("a",{attrs:{href:"http://mochajs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mocha"),e("OutboundLink")],1),t._v("或者 "),e("a",{attrs:{href:"http://jasmine.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jasmine"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"yo-code-测试脚手架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yo-code-测试脚手架"}},[t._v("#")]),t._v(" Yo Code 测试脚手架")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/docs/tools/yocode.html"}},[t._v("yo code 生成器")]),t._v(" 插件项目包含一个测试样例还有\b支持其运行的必要基础设施。")],1),t._v(" "),e("p",[e("strong",[t._v("说明")]),t._v(": 接下来的文档建立在你已经创建了一个 TypeScript或者 JavaScript 插件的基础上，但是\b有些文件命名可能比较特别。")]),t._v(" "),e("p",[t._v("在你创建一个插件，在VS Code 上打开时，你可以从调试视图的顶部下拉菜单里进行"),e("code",[t._v("Launch Tests")]),t._v("配置")]),t._v(" "),e("p",[e("img",{attrs:{src:"images/testing-extensions/launch-tests.png",alt:"launch tests"}})]),t._v(" "),e("p",[t._v("该配置被选中时，运行"),e("code",[t._v("Debug: Start")]),t._v("("),e("code",[t._v("kb(workbench.action.debug.start)")]),t._v(")，VS Code会在"),e("code",[t._v("Extension Development Host")]),t._v("实例上启动你的插件。你可以看到测试结果会在调试控制台上输出。")]),t._v(" "),e("p",[e("img",{attrs:{src:"images/testing-extensions/test-output.png",alt:"测试结果"}})]),t._v(" "),e("p",[t._v("\b该测试使用"),e("a",{attrs:{href:"http://mochajs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mocha测试框架"),e("OutboundLink")],1),t._v(" 来做为测试运行库.")]),t._v(" "),e("p",[t._v("该插件项目有一个包含"),e("code",[t._v("index.js")]),t._v("文件（配置 Mocha 测试库），"),e("code",[t._v("extension.test.js")]),t._v("（存在"),e("code",[t._v("Something 1")]),t._v("测试样例）的"),e("code",[t._v("test")]),t._v("文件夹。可以不编辑"),e("code",[t._v("index.ts")]),t._v("，但是你也可以修改它来调整Mocha 配置。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("├── "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n│   ├── extension.test.ts\n│   └── index.ts\n")])])]),e("p",[t._v("可以在"),e("code",[t._v("test")]),t._v("目录下创建\b更多的"),e("code",[t._v("test.ts")]),t._v("文件，之后他们会自动构建并运行在"),e("code",[t._v("out/test")]),t._v("目录下。测试库只会运行"),e("code",[t._v("*.test.ts")]),t._v("文件。")]),t._v(" "),e("h2",{attrs:{id:"启动测试配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动测试配置"}},[t._v("#")]),t._v(" 启动测试配置")]),t._v(" "),e("p",[e("code",[t._v("Launch Tests")]),t._v(" 配置在项目的"),e("code",[t._v(".vscode\\launch.json")]),t._v("文件中定义。和带有"),e("code",[t._v("--extensionTestsPath")]),t._v("参数的"),e("code",[t._v("Launch Extension")]),t._v("配置类似，指向编译好的\b测试文件（假定这是一个 TypeScript 项目）。")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Launch Tests"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extensionHost"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"request"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"launch"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"runtimeExecutable"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${execPath}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionDevelopmentPath=${workspaceRoot}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionTestsPath=${workspaceRoot}/out/test"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"stopOnEntry"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"sourceMaps"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"outDir"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${workspaceRoot}/out/test"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"preLaunchTask"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"给extension-development-host传递参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#给extension-development-host传递参数"}},[t._v("#")]),t._v(" 给Extension Development Host传递参数")]),t._v(" "),e("p",[t._v("可以\b在启动配置的参数列表开头，插入测试用例应该打开的文件或者目录")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"args"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file or folder name"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionDevelopmentPath=${workspaceRoot}"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--extensionTestsPath=${workspaceRoot}/out/test"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),e("p",[t._v("这样，你就可以运行带有可预测内容和目录结构的测试。")]),t._v(" "),e("h2",{attrs:{id:"在插件包内排除测试文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在插件包内排除测试文件"}},[t._v("#")]),t._v(" 在插件包内排除测试文件")]),t._v(" "),e("p",[t._v("你想要分享插件的话，插件不会包含测试文件吧。"),e("RouterLink",{attrs:{to:"/docs/tools/vscecli.html#advance-usage"}},[e("code",[t._v(".vscodeignore")])]),t._v("文件允许你在通过"),e("RouterLink",{attrs:{to:"/docs/tools/vscecli.html"}},[e("code",[t._v("vsce")]),t._v("发布工具")]),t._v("打包，发布\b插件的时候排除测试文件。默认地，"),e("code",[t._v("yo code")]),t._v("生成好的插件项目排除了"),e("code",[t._v("test")]),t._v("，和"),e("code",[t._v("out/test")]),t._v("目录。")],1),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("out/test/**\ntest/**\n")])])]),e("h2",{attrs:{id:"在travis-ci构建机器上自动运行测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在travis-ci构建机器上自动运行测试"}},[t._v("#")]),t._v(" 在Travis CI构建机器上自动运行测试")]),t._v(" "),e("p",[t._v("你可以在"),e("a",{attrs:{href:"http://travis-ci.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Travis CI"),e("OutboundLink")],1),t._v("这样的构建机器上自动运行插件测试。")]),t._v(" "),e("p",[e("code",[t._v("vscode")]),t._v("npm 模块提供了测试命令，用来开启\b插件测试自动化：")]),t._v(" "),e("ul",[e("li",[t._v("下载并解压 VS Code")]),t._v(" "),e("li",[t._v("启动 VS Code 内部的插件测试")]),t._v(" "),e("li",[t._v("在控制台输出结果，测试成功或者失败返回结束码。")])]),t._v(" "),e("p",[t._v("为了开启这条测试命令，打开"),e("code",[t._v("package.json")]),t._v("，增加下列入口到"),e("code",[t._v("scripts")]),t._v("字段上：")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node ./node_modules/vscode/bin/test"')]),t._v("\n")])])]),e("p",[t._v("可以轻易的通过这样的顶级"),e("code",[t._v(".travis.yml")]),t._v("配置来开启Travis Ci：")]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sudo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("os")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" osx\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" linux\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("before_install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" if "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(' $TRAVIS_OS_NAME == "linux" '),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v('; then\n      export CXX="g++'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('4.9" CC="gcc'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('4.9" DISPLAY='),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("99.0;\n      sh "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("e /etc/init.d/xvfb start;\n      sleep 3;\n    fi\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run vscode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("prepublish\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm test "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("silent\n")])])]),e("p",[t._v("以上脚本会在 Linux 和 Mac OS X 上跑测试用例。需要注意为了在 Linux 上运行测试用例，你需要有"),e("code",[t._v("before_install")]),t._v("配置使得 Linux 在构建时启动 VS Code。")]),t._v(" "),e("p",[e("strong",[t._v("说明:")]),t._v(" 现在我们不支持在 Windows 上跑测试用例（比如使用 Appveyor）。")]),t._v(" "),e("p",[t._v("有一些用来配置测试库的可选环境变量；")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("名称")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("CODE_VERSION")])]),t._v(" "),e("td",[t._v("跑测试用例的 VS Code版本 (比如 "),e("code",[t._v("0.10.10")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("CODE_DOWNLOAD_URL")])]),t._v(" "),e("td",[t._v("可以跑测试用例的VS Code的完整下载地址")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("CODE_TESTS_PATH")])]),t._v(" "),e("td",[t._v("要排除的测试文件夹")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("CODE_TESTS_WORKSPACE")])]),t._v(" "),e("td",[t._v("打开测试实例的工作区间")])])])]),t._v(" "),e("h2",{attrs:{id:"下一步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下一步"}},[t._v("#")]),t._v(" 下一步")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/docs/extensions/debugging-extensions.html"}},[t._v("插件调试")]),t._v(" - 学习如何运行并调试插件")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/docs/tools/vscecli.html"}},[t._v("vsce")]),t._v(" - 通过 VSCE 命令行工具发布插件.")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/docs/extensionAPI/extension-manifest.html"}},[t._v("插件清单文件")]),t._v(" - VS Code 插件清单文件指南")],1),t._v(" "),e("li",[e("RouterLink",{attrs:{to:"/docs/extensionAPI/overview.html"}},[t._v("插件 API")]),t._v(" - 了解 VS Code 可扩展性 API")],1)]),t._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),e("p",[t._v("暂无。")])])}),[],!1,null,null,null);s.default=n.exports}}]);